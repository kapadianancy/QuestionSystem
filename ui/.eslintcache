[{"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\index.js":"1","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\reportWebVitals.js":"2","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\App.js":"3","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\UserContext.js":"4","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Error.js":"5","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\App.js":"6","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\ActionNames.js":"7","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Logout.js":"8","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Dashboard\\Dashboard.js":"9","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Login\\Login.js":"10","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Header\\Header.js":"11","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Sidebar\\Sidebar.js":"12","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\UserAction.js":"13","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\axios.js":"14","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\LanguageContext.js":"15","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\LanguageList.js":"16","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\AddLanguage.js":"17","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\EditLanguage.js":"18","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\LanguageAction.js":"19","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\AddQuestion.js":"20","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\QuestionAction.js":"21","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\QuestionContext.js":"22","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\QuestionList.js":"23","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\EditQuestion.js":"24","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\AnswerAction.js":"25","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\AnswerContext.js":"26"},{"size":1110,"mtime":1607614330689,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1607401832726,"results":"29","hashOfConfig":"28"},{"size":339,"mtime":1607491692060,"results":"30","hashOfConfig":"28"},{"size":1695,"mtime":1607401832723,"results":"31","hashOfConfig":"28"},{"size":377,"mtime":1607401832723,"results":"32","hashOfConfig":"28"},{"size":1607,"mtime":1607515164313,"results":"33","hashOfConfig":"28"},{"size":788,"mtime":1607614330682,"results":"34","hashOfConfig":"28"},{"size":517,"mtime":1607401832719,"results":"35","hashOfConfig":"28"},{"size":1441,"mtime":1607515164314,"results":"36","hashOfConfig":"28"},{"size":3447,"mtime":1607515164318,"results":"37","hashOfConfig":"28"},{"size":1743,"mtime":1607515164315,"results":"38","hashOfConfig":"28"},{"size":1676,"mtime":1607515164321,"results":"39","hashOfConfig":"28"},{"size":1396,"mtime":1607401832714,"results":"40","hashOfConfig":"28"},{"size":141,"mtime":1607401832724,"results":"41","hashOfConfig":"28"},{"size":1781,"mtime":1607515164321,"results":"42","hashOfConfig":"28"},{"size":5287,"mtime":1607515164317,"results":"43","hashOfConfig":"28"},{"size":6327,"mtime":1607515164316,"results":"44","hashOfConfig":"28"},{"size":6633,"mtime":1607515164316,"results":"45","hashOfConfig":"28"},{"size":2817,"mtime":1607515164312,"results":"46","hashOfConfig":"28"},{"size":11216,"mtime":1607673133231,"results":"47","hashOfConfig":"28"},{"size":2777,"mtime":1607600511799,"results":"48","hashOfConfig":"28"},{"size":1781,"mtime":1607614330687,"results":"49","hashOfConfig":"28"},{"size":5471,"mtime":1607673133233,"results":"50","hashOfConfig":"28"},{"size":7572,"mtime":1607515164319,"results":"51","hashOfConfig":"28"},{"size":786,"mtime":1607614330683,"results":"52","hashOfConfig":"28"},{"size":1370,"mtime":1607614330686,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"tbkpjy",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\index.js",[],["116","117"],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\reportWebVitals.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\App.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\UserContext.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Error.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\App.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\ActionNames.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Logout.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Dashboard\\Dashboard.js",["118","119","120","121"],"import React, { useState, useEffect } from 'react';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\n\r\n\r\nfunction Dashboard(props) {\r\n\r\n\r\n    var style = {\r\n        height: \"150px\"\r\n    }\r\n\r\n    var path = \"../assets/images/bottom-bg.png\";\r\n    var bgImageStyle = {\r\n        backgroundImage: \"url(\" + path + \")\",\r\n        height: \"100%\",\r\n        backgroundPosition: 'bottom',\r\n        backgroundRepeat: 'no-repeat'\r\n    }\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div className=\"content-wrapper\" style={bgImageStyle}>\r\n                    <div className=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"breadcrumb\">\r\n                                <a href=\"/admin\" className=\"breadcrumb-item\"><i className=\"icon-home2 mr-2\"></i> Home</a>\r\n                                <span className=\"breadcrumb-item active\">Dashboard</span>\r\n                            </div>\r\n                            <a href=\"#\" className=\"header-elements-toggle text-default d-md-none\"><i className=\"icon-more\"></i></a>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Login\\Login.js",["122","123"],"import { useEffect, useState } from 'react'\r\nimport * as actions from '../../../Actions/UserAction';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { useUserDispatch, useUserState } from '../../../Context/UserContext';\r\n\r\nfunction Login(props) {\r\n\r\n    var userDispatch = useUserDispatch();\r\n    var { error, token } = useUserState();\r\n    var [username, setUsername] = useState(\"\");\r\n    var [password, setPassword] = useState(\"\");\r\n\r\n\r\n    var logo = \"../assets/images/logo.jpeg\";\r\n    var path = \"../assets/images/about_layout.png\";\r\n    var style = {\r\n        backgroundImage: \"url(\" + path + \")\",\r\n        height: \"100%\",\r\n        backgroundPosition: 'center',\r\n        //backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat'\r\n    }\r\n\r\n    const login = async (event) => {\r\n\r\n        event.preventDefault();\r\n        let user = {\r\n            username: username,\r\n            password: password\r\n        }\r\n\r\n        await actions.loginAction(userDispatch, user);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={style}>\r\n            {token != null ? <Redirect to=\"/admin\" /> : null}\r\n            <div className=\"content d-flex justify-content-center align-items-center\" >\r\n                <form className=\"login-form\" style={{ marginTop: \"96px\" }}\r\n                    onSubmit={login} >\r\n                    <div className=\"card mb-0\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"text-center mb-3\">\r\n                                <img src={logo} width=\"220px\" />\r\n                                <h5 className=\"mb-0\">Login to your account</h5>\r\n                                <span className=\"d-block text-muted\">Enter your credentials below</span>\r\n\r\n\r\n\r\n                                <div style={{ color: \"red\", fontSize: \"18px\" }}>{error}</div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Username\"\r\n                                    value={username} onChange={(e) => { setUsername(e.target.value) }}\r\n                                />\r\n\r\n                                <div className=\"form-control-feedback\">\r\n                                    <i className=\"icon-user text-muted\"></i>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\"\r\n                                    value={password} onChange={(e) => { setPassword(e.target.value) }}\r\n                                />\r\n\r\n                                <div className=\"form-control-feedback\">\r\n                                    <i className=\"icon-lock2 text-muted\"></i>\r\n                                </div>\r\n                            </div>\r\n\r\n                           \r\n\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default withRouter(Login);","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Header\\Header.js",["124","125","126"],"import React from 'react';\r\nimport Avatar from 'react-avatar';\r\n\r\nfunction Header(props) {\r\n\r\n\tvar logo=\"../../assets/images/logo.jpeg\";\r\n\tvar user = JSON.parse(localStorage.getItem('user'));\r\n\t\r\n\r\n\tvar style = {\r\n\t\theight: 70,\r\n\t\timg:{\r\n\t\t\twidth:\"130px\",\r\n\t\t\theight:\"45px\"\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"navbar navbar-expand-md navbar-dark\" style={style}>\r\n\t\t\t\t<div className=\"navbar-brand\">\r\n\t\t\t\t\t<a href=\"#\" className=\"d-inline-block\">\r\n\t\t\t\t\t\t<img src={logo} alt=\"\" style={style.img}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbar-mobile\">\r\n\t\t\t\t\t<ul className=\"navbar-nav\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"navbar-nav-link sidebar-control sidebar-main-toggle d-none d-md-block\">\r\n\t\t\t\t\t\t\t\t<i className=\"icon-paragraph-justify3\"></i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\r\n\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t<span class=\"badge bg-success ml-md-3 mr-md-auto\">Online</span>\r\n\r\n\t\t\t\t\t<ul className=\"navbar-nav\">\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<li className=\"nav-item dropdown dropdown-user\">\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"navbar-nav-link d-flex align-items-center dropdown-toggle\" data-toggle=\"dropdown\">\r\n\t\t\t\t\t\t\t\t{/* <img src=\"../assets/images/demo/users/face13.jpg\" className=\"rounded-circle mr-2\" height=\"34\" alt=\"\"/> */}\r\n\t\t\t\t\t\t\t\t<Avatar name={user==null?null:user.username} round={true} size=\"50\" color=\"#26a69a\" style={{ margin: \"5px 10px 10px auto\" }} />\r\n\t\t\t\t\t\t\t\t<span>{user==null?null:user.username}</span>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right\">\r\n\t\t\t\t\t\t\t\t<a href=\"/admin/logout\" className=\"dropdown-item\"><i className=\"icon-switch2\"></i> Logout</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Header;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Sidebar\\Sidebar.js",["127","128"],"import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Sidebar(proprs) {\r\n\tvar style={\r\n\t\theight: \"100%\"\t  \r\n\t}\r\n\treturn (\r\n\r\n\t\t<>\r\n\r\n\t\t\t<div className=\"sidebar sidebar-dark sidebar-main sidebar-expand-md\" style={style} >\r\n\r\n\t\t\t\t<div className=\"sidebar-content\">\r\n\t\t\t\t\t<div className=\"card card-sidebar-mobile\">\r\n\t\t\t\t\t\t<ul className=\"nav nav-sidebar\" data-nav-type=\"accordion\">\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<a href=\"/admin\" className=\"nav-link active\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"icon-home4\"></i>\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\tDashboard\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"nav-item nav-item-submenu\">\r\n\t\t\t\t\t\t\t\t<a  className=\"nav-link\"><i className=\"icon-books\"></i> <span>Language</span></a>\r\n\r\n\t\t\t\t\t\t\t\t<ul className=\"nav nav-group-sub\" data-submenu-title=\"language\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\"><a href=\"/admin/addlanguage\" className=\"nav-link\">Add Langauge</a></li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\"><a href=\"/admin/languagelist\" className=\"nav-link\">Langauge List</a></li>\r\n\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li className=\"nav-item nav-item-submenu\">\r\n\t\t\t\t\t\t\t\t<a  className=\"nav-link\"><i className=\"icon-question7\"></i> <span>Question</span></a>\r\n\r\n\t\t\t\t\t\t\t\t<ul className=\"nav nav-group-sub\" data-submenu-title=\"question\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\"><a href=\"/admin/addquestion\" className=\"nav-link\">Add Question</a></li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\"><a href=\"/admin/questionlist\" className=\"nav-link\">Question List</a></li>\r\n\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div></div>\r\n\t\t</>\r\n\r\n\t)\r\n}\r\nexport default withRouter(Sidebar);","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\UserAction.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\axios.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\LanguageContext.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\LanguageList.js",["129","130","131","132","133","134","135","136"],"import React, { useEffect } from 'react'\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/LanguageAction';\r\n\r\nimport { useLanguageDispatch, useLanguageState } from '../../../Context/LanguageContext';\r\n\r\nfunction LanguageList(props) {\r\n\r\n    var languageDispatch = useLanguageDispatch();\r\n    var { languages } = useLanguageState();\r\n\r\n    useEffect(async () => {\r\n        await actions.getAllLanguage(languageDispatch);\r\n    }, [])\r\n\r\n    const edit = (id) => {\r\n        props.history.push(\"/admin/editlanguage/\" + id)\r\n    }\r\n\r\n    const remove = async (id) => {\r\n        if (window.confirm('Are you sure to delete this language ?')) {\r\n            await actions.removeLanguage(languageDispatch, id);\r\n            await actions.getAllLanguage(languageDispatch);\r\n        }\r\n    }\r\n\r\n    var data = null;\r\n    data = languages.map(l => {\r\n       \r\n        data = (\r\n            <tr>\r\n                <td>{l.name}</td>\r\n                <td>{l.description}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td class=\"text-center\">\r\n                    <div class=\"list-icons\">\r\n                        <div class=\"dropdown\">\r\n                            <a href=\"#\" class=\"list-icons-item\" data-toggle=\"dropdown\">\r\n                                <i class=\"icon-menu9\"></i>\r\n                            </a>\r\n\r\n                            <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                <a onClick={() => edit(l._id)} class=\"dropdown-item\"><i class=\"icon-pencil\"></i>Edit</a>\r\n                                <a onClick={() => remove(l._id)} class=\"dropdown-item\"><i class=\"icon-cross2\"></i>Delete</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n\r\n        )\r\n        return data;\r\n    })\r\n\r\n    const addlanguage = () => {\r\n        props.history.push(\"/admin/addlanguage\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4> <span class=\"font-weight-semibold\">Language List</span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i> Dashboard</a>\r\n                                    <a href=\"/admin/languagelist\" class=\"breadcrumb-item\">Language List</a>\r\n\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n                                        <h5 class=\"card-title\"></h5>\r\n                                        <div class=\"header-elements\">\r\n                                            <div class=\"list-icons\">\r\n                                                <button onClick={addlanguage} class=\"btn bg-teal-400 ml-3\">Add <i class=\"icon-plus3 ml-2\"></i></button>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <table class=\"table datatable-basic table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Name</th>\r\n                                                <th>Description</th>\r\n                                                <th colSpan=\"4\" class=\"text-center\">Actions</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            {data}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LanguageList;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\AddLanguage.js",["137","138","139"],"import React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/LanguageAction';\r\n\r\nimport { useLanguageDispatch, useLanguageState } from '../../../Context/LanguageContext';\r\n\r\n\r\n\r\nfunction AddLanguage(props) {\r\n\r\n    var { error, language } = useLanguageState();\r\n    var languageDispatch = useLanguageDispatch();\r\n    var [name, setName] = useState(\"\");\r\n    var [description, setDescription] = useState(\"\");\r\n    var [validation, setValidation] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (language != null) {\r\n            props.history.push(\"/admin/languagelist\")\r\n        }\r\n    }, [error, language])\r\n\r\n    const reset = () => {\r\n        setName(\"\");\r\n        setDescription(\"\");\r\n        setValidation(\"\");\r\n        error = \"\";\r\n        language = \"\";\r\n    }\r\n\r\n\r\n    const addlanguage = async (event) => {\r\n        event.preventDefault();\r\n        if (await validate()) {\r\n            const data = {\r\n                name,\r\n                description\r\n            }\r\n            await actions.addLanguage(languageDispatch,data);\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n        let isValid = true;\r\n\r\n        if (!name) {\r\n            isValid = false;\r\n            err[\"name\"] = \"Please enter name.\";\r\n        }\r\n\r\n        if (!description) {\r\n            isValid = false;\r\n            err[\"description\"] = \"Please enter description.\";\r\n        }\r\n\r\n        setValidation(err)\r\n        return isValid;\r\n    }\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4><span class=\"font-weight-semibold\">Add Language </span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i>Dashboard</a>\r\n                                    <a href=\"/admin/addlanguage\" class=\"breadcrumb-item\">Add Language</a>\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form onSubmit={addlanguage} onReset={reset}>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Name <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <input class=\"form-control\" type=\"text\" name=\"name\" placeholder=\"Enter Name\"\r\n                                                        value={name} onChange={(e) => setName(e.target.value)} />\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"name\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Description <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <textarea rows=\"3\" name=\"description\" cols=\"3\" class=\"form-control\" placeholder=\"Enter Description\" aria-invalid=\"true\"\r\n                                                        value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"description\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            <div class=\"form-group row mb-0\">\r\n                                                <div class=\"col-lg-10 ml-lg-auto\">\r\n                                                    <button type=\"reset\" style={{ borderColor: \"#26a69a\" }} class=\"btn btn-light\"\r\n                                                    >Reset<i class=\"icon-reset ml-2\"></i></button>\r\n                                                    <button type=\"submit\" class=\"btn bg-teal-400 ml-3\">Add <i class=\"icon-paperplane ml-2\"></i></button>\r\n                                                    <div style={{ color: \"red\", fontSize: \"18px\", paddingTop: \"5px\" }}>{error}</div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddLanguage);\r\n","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\EditLanguage.js",["140","141","142","143","144","145","146","147","148"],"import React, { Component, useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/LanguageAction';\r\n\r\nimport { useLanguageState, useLanguageDispatch } from '../../../Context/LanguageContext';\r\n\r\n\r\nfunction EditLanguage(props) {\r\n    var { error, language } = useLanguageState();\r\n    var languageDispatch = useLanguageDispatch();\r\n    var [name, setName] = useState(\"\");\r\n    var [description, setDescription] = useState(\"\");\r\n    var [validation, setValidation] = useState(\"\");\r\n    var [id, setId] = useState(props.match.params.id);\r\n\r\n    useEffect(async () => {\r\n        await actions.getLangaugeById(languageDispatch, id);\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (language != null) {\r\n            setName(language.name)\r\n            setDescription(language.description)\r\n        }\r\n    }, [language])\r\n\r\n\r\n\r\n    const reset = () => {\r\n        setName(\"\");\r\n        setDescription(\"\");\r\n        setValidation(\"\");\r\n        error = \"\";\r\n        language = \"\";\r\n    }\r\n\r\n    const editlanguage = async (event) => {\r\n        event.preventDefault();\r\n        if (await validate()) {\r\n            const data = {\r\n                name,\r\n                description\r\n            }\r\n            await actions.updateLanguage(languageDispatch, id, data);\r\n            props.history.push('/admin/languagelist')\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n        let isValid = true;\r\n\r\n        if (!name) {\r\n            isValid = false;\r\n            err[\"name\"] = \"Please enter name.\";\r\n        }\r\n\r\n        if (!description) {\r\n            isValid = false;\r\n            err[\"description\"] = \"Please enter description.\";\r\n        }\r\n\r\n        setValidation(err)\r\n        return isValid;\r\n    }\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4><span class=\"font-weight-semibold\">Edit language </span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i>Dashboard</a>\r\n                                    <a href=\"#\" class=\"breadcrumb-item\">Edit Language</a>\r\n\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form onSubmit={editlanguage} onReset={reset}>\r\n                                            <input type=\"hidden\" name=\"id\" value={id} />\r\n\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Name <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <input class=\"form-control\" type=\"name\" name=\"name\"\r\n                                                        value={name} onChange={(e) => setName(e.target.value)} />\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"name\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Description <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <textarea rows=\"3\" name=\"description\" cols=\"3\" class=\"form-control\" placeholder=\"Enter Description\" aria-invalid=\"true\"\r\n                                                        value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"description\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row mb-0\">\r\n                                                <div class=\"col-lg-10 ml-lg-auto\">\r\n                                                    <button type=\"reset\" style={{ borderColor: \"#26a69a\" }} class=\"btn btn-light\"\r\n                                                    >Reset<i class=\"icon-reset ml-2\"></i></button>\r\n                                                    <button type=\"submit\" class=\"btn bg-teal-400 ml-3\">Edit <i class=\"icon-paperplane ml-2\"></i></button>\r\n                                                    <div style={{ color: \"red\", fontSize: \"18px\", paddingTop: \"5px\" }}>{error}</div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditLanguage;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\LanguageAction.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\AddQuestion.js",["149","150","151","152","153","154","155","156","157","158","159","160"],"import React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as lactions from '../../../Actions/LanguageAction';\r\nimport * as actions from '../../../Actions/QuestionAction';\r\nimport * as aactions from '../../../Actions/AnswerAction';\r\n\r\nimport { useLanguageDispatch, useLanguageState } from '../../../Context/LanguageContext';\r\nimport { useQuestionDispatch, useQuestionState } from '../../../Context/QuestionContext';\r\nimport { useAnswerDispatch, useAnswerState } from '../../../Context/AnswerContext';\r\n\r\nfunction AddQuestion(props) {\r\n\r\n    var { languages } = useLanguageState();\r\n    var languageDispatch = useLanguageDispatch();\r\n\r\n    var { error, question } = useQuestionState();\r\n    var questionDispatch = useQuestionDispatch();\r\n\r\n    var { error, answer } = useAnswerState();\r\n    var answerDispatch = useAnswerDispatch();\r\n\r\n    var [language, setLanguage] = useState([]);\r\n    var [que, setQue] = useState(\"\");\r\n    var [ans, setAns] = useState(\"\");\r\n    var [validation, setValidation] = useState(\"\");\r\n\r\n    const [details, setDetails] = useState([]);\r\n\r\n    const renderSpecifications = (details, handleChange, deleteAnswer) => {\r\n        return details.map(detail => (\r\n            <div key={detail.key} >\r\n\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-form-label col-lg-2\">Answer <span class=\"text-danger\">*</span></label>\r\n\r\n                    <div class=\"col-lg-9\">\r\n                        <SunEditor\r\n                            setContents={ans}\r\n                            onChange={(val) => handleChange(detail.key, val)}\r\n                            placeholder=\"Write Answer Here.\"\r\n                            lang=\"en\"\r\n                            height=\"100\"\r\n                            setOptions={{\r\n                                buttonList: [\r\n                                    [\"undo\", \"redo\"],\r\n                                    [\"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\",\r\n                                        \"fontColor\", \"textStyle\"],\r\n                                    [\"removeFormat\"],\r\n                                    [\"table\", \"list\", \"lineHeight\"]\r\n                                ]\r\n                            }} />\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button class=\"btn bg-teal-400 ml-1\" onClick={() => deleteAnswer(detail.key)}>X</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    const addAnswer = () => {\r\n        let newDetails = [...details];\r\n        newDetails.push({ key: details.length, details: \"\" });\r\n        setDetails(newDetails);\r\n    }\r\n\r\n    const deleteAnswer = (key) => {\r\n        let newDetails = [...details].filter(detail => detail.key !== key);\r\n        setDetails(newDetails);\r\n    }\r\n    const handleDetailDataChange = (key, value) => {\r\n        let newDetails = [...details];\r\n        newDetails[key].details = value;\r\n        setDetails(newDetails);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (answer != null) {\r\n            props.history.push(\"/admin/questionlist\")\r\n        }\r\n    }, [error, answer])\r\n\r\n    useEffect(async () => {\r\n        if (question != null) {\r\n            details.forEach(async (final) => {\r\n                const answerdata = {\r\n                    questionId: question._id,\r\n                    answer: final.details\r\n                }\r\n                await aactions.addAnswer(answerDispatch, answerdata)\r\n            });\r\n        }\r\n    }, [question])\r\n\r\n    useEffect(async () => {\r\n        await lactions.getAllLanguage(languageDispatch);\r\n    }, [])\r\n\r\n    var lan = languages.map(l => {\r\n        lan = (<option value={l._id}>{l.name}</option>)\r\n        return lan;\r\n    })\r\n\r\n    const reset = () => {\r\n        setLanguage(\"\");\r\n        setQue(\"\");\r\n        setValidation(\"\");\r\n        setAns(\"\");\r\n        error = \"\";\r\n        question = \"\";\r\n    }\r\n\r\n    const onChangeLanguage = async (event) => {\r\n        var selected = [];\r\n        for (var option of document.getElementById('language').options) {\r\n            if (option.selected) {\r\n                selected.push(option.value);\r\n            }\r\n        }\r\n        setLanguage(selected)\r\n    }\r\n\r\n    const add = async (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const addquestion = async (event) => {\r\n        event.preventDefault();\r\n        if (await validate()) {\r\n            const data = {\r\n                languageId: language,\r\n                question: que\r\n            }\r\n            await actions.addQuestion(questionDispatch, data);\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n        let isValid = true;\r\n\r\n        if (language.length == 0) {\r\n            isValid = false;\r\n            err[\"language\"] = \"Please select atleast one language.\";\r\n        }\r\n\r\n        if (!que) {\r\n            isValid = false;\r\n            err[\"question\"] = \"Please enter question.\";\r\n        }\r\n\r\n        if (details.length == 0) {\r\n            isValid = false;\r\n            err[\"answer\"] = \"Please add atleast one answer.\";\r\n        }\r\n\r\n        setValidation(err)\r\n        return isValid;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4><span class=\"font-weight-semibold\">Add Question </span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i>Dashboard</a>\r\n                                    <a href=\"/admin/addquestion\" class=\"breadcrumb-item\">Add Question</a>\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form onSubmit={add} onReset={reset}>\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Languages <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <select id=\"language\" name=\"language\" multiple class=\"form-control\" required=\"\" size=\"2\"\r\n                                                        onChange={onChangeLanguage}\r\n                                                    >\r\n                                                        {lan}\r\n                                                    </select>\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"language\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Question <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <input class=\"form-control\" type=\"text\" name=\"question\" placeholder=\"Enter Question\"\r\n                                                        value={que} onChange={(e) => setQue(e.target.value)} />\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"question\"]}</div>\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"answer\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            {renderSpecifications(details, handleDetailDataChange, deleteAnswer)}\r\n                                            <div class=\"form-group row\">\r\n                                                <div class=\"card-header header-elements-inline\" style={{ marginLeft: \"700px\" }}>\r\n                                                    <h5 class=\"card-title\"></h5>\r\n                                                    <div class=\"header-elements\">\r\n                                                        <div class=\"list-icons\">\r\n                                                            <button onClick={addAnswer} class=\"btn bg-teal-400 ml-3\" >Add Answer + </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row mb-0\">\r\n                                                <div class=\"col-lg-10 ml-lg-auto\">\r\n                                                    <button type=\"reset\" style={{ borderColor: \"#26a69a\" }} class=\"btn btn-light\"\r\n                                                    >Reset<i class=\"icon-reset ml-2\"></i></button>\r\n                                                    <button type=\"submit\" onClick={addquestion} class=\"btn bg-teal-400 ml-3\">Add <i class=\"icon-paperplane ml-2\"></i></button>\r\n                                                    <div style={{ color: \"red\", fontSize: \"18px\", paddingTop: \"5px\" }}>{error}</div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddQuestion);\r\n","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\QuestionAction.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\QuestionContext.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\QuestionList.js",["161","162","163","164","165","166","167","168"],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\EditQuestion.js",["169","170","171","172","173","174","175","176","177","178","179"],"import React, {useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as lactions from '../../../Actions/LanguageAction';\r\nimport * as actions from '../../../Actions/QuestionAction';\r\n\r\nimport { useLanguageDispatch, useLanguageState } from '../../../Context/LanguageContext';\r\nimport { useQuestionDispatch, useQuestionState } from '../../../Context/QuestionContext';\r\n\r\n\r\nfunction EditQuestion(props) {\r\n\r\n    var { languages } = useLanguageState();\r\n    var languageDispatch = useLanguageDispatch();\r\n\r\n    var { error, question } = useQuestionState();\r\n    var questionDispatch = useQuestionDispatch();\r\n\r\n    var [language, setLanguage] = useState([]);\r\n    var [que, setQue] = useState(\"\");\r\n    var [validation, setValidation] = useState(\"\");\r\n    var [id, setId] = useState(props.match.params.id);\r\n\r\n    useEffect(async () => {\r\n        await actions.getQuestionById(questionDispatch, id);\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (question != null) {\r\n            setQue(question.question)\r\n            setLanguage(question.languageId)\r\n        }\r\n    }, [question])\r\n\r\n    useEffect(async () => {\r\n        await lactions.getAllLanguage(languageDispatch);\r\n    }, [])\r\n\r\n    var lan = languages.map(l => {\r\n        lan = (<option value={l._id}>{l.name}</option>)\r\n        return lan;\r\n    })\r\n\r\n    const reset = () => {\r\n        setLanguage(\"\");\r\n        setQue(\"\");\r\n        setValidation(\"\");\r\n        error = \"\";\r\n        question = \"\";\r\n    }\r\n\r\n    const onChangeLanguage = async (event) => {\r\n        var selected = [];\r\n        for (var option of document.getElementById('language').options) {\r\n            if (option.selected) {\r\n                selected.push(option.value);\r\n            }\r\n        }\r\n        setLanguage(selected)\r\n    }\r\n\r\n    const editquestion = async (event) => {\r\n        event.preventDefault();\r\n        if (await validate()) {\r\n            const data = {\r\n                languageId: language,\r\n                question: que\r\n            }\r\n            await actions.updateQuestion(questionDispatch, id, data);\r\n            props.history.push('/admin/questionlist')\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n        let isValid = true;\r\n\r\n        if (language.length == 0) {\r\n            isValid = false;\r\n            err[\"language\"] = \"Please select atleast one language.\";\r\n        }\r\n\r\n        if (!que) {\r\n            isValid = false;\r\n            err[\"question\"] = \"Please enter question.\";\r\n        }\r\n\r\n        setValidation(err)\r\n        return isValid;\r\n    }\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4><span class=\"font-weight-semibold\">Edit Question </span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i>Dashboard</a>\r\n                                    <a href=\"#\" class=\"breadcrumb-item\">Edit Question</a>\r\n\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form onSubmit={editquestion} onReset={reset}>\r\n                                            <input type=\"hidden\" name=\"id\" value={id} />\r\n\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Languages <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <select id=\"language\" name=\"language\" multiple class=\"form-control\" required=\"\" size=\"2\"\r\n                                                        onChange={onChangeLanguage} value={language}\r\n                                                    >\r\n                                                        {lan}\r\n                                                    </select>\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"language\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Question <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <input class=\"form-control\" type=\"text\" name=\"question\" placeholder=\"Enter Question\"\r\n                                                        value={que} onChange={(e) => setQue(e.target.value)} />\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"question\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row mb-0\">\r\n                                                <div class=\"col-lg-10 ml-lg-auto\">\r\n                                                    <button type=\"reset\" style={{ borderColor: \"#26a69a\" }} class=\"btn btn-light\"\r\n                                                    >Reset<i class=\"icon-reset ml-2\"></i></button>\r\n                                                    <button type=\"submit\" class=\"btn bg-teal-400 ml-3\">Edit <i class=\"icon-paperplane ml-2\"></i></button>\r\n                                                    <div style={{ color: \"red\", fontSize: \"18px\", paddingTop: \"5px\" }}>{error}</div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditQuestion;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\AnswerAction.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\AnswerContext.js",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"188","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"189","line":10,"column":9,"nodeType":"186","messageId":"187","endLine":10,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":34,"column":29,"nodeType":"192","endLine":34,"endColumn":99},{"ruleId":"184","severity":1,"message":"188","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":46,"column":33,"nodeType":"192","endLine":46,"endColumn":65},{"ruleId":"190","severity":1,"message":"191","line":21,"column":6,"nodeType":"192","endLine":21,"endColumn":45},{"ruleId":"190","severity":1,"message":"191","line":30,"column":8,"nodeType":"192","endLine":30,"endColumn":102},{"ruleId":"190","severity":1,"message":"191","line":44,"column":8,"nodeType":"192","endLine":44,"endColumn":113},{"ruleId":"190","severity":1,"message":"195","line":28,"column":9,"nodeType":"192","endLine":28,"endColumn":34},{"ruleId":"190","severity":1,"message":"195","line":38,"column":9,"nodeType":"192","endLine":38,"endColumn":34},{"ruleId":"196","severity":1,"message":"197","line":14,"column":15,"nodeType":"198","endLine":16,"endColumn":6},{"ruleId":"196","severity":1,"message":"199","line":16,"column":8,"nodeType":"200","endLine":16,"endColumn":10,"suggestions":"201"},{"ruleId":"190","severity":1,"message":"191","line":42,"column":29,"nodeType":"192","endLine":42,"endColumn":88},{"ruleId":"190","severity":1,"message":"195","line":47,"column":33,"nodeType":"192","endLine":47,"endColumn":86},{"ruleId":"190","severity":1,"message":"195","line":48,"column":33,"nodeType":"192","endLine":48,"endColumn":88},{"ruleId":"190","severity":1,"message":"191","line":75,"column":33,"nodeType":"192","endLine":75,"endColumn":99},{"ruleId":"190","severity":1,"message":"191","line":89,"column":33,"nodeType":"192","endLine":89,"endColumn":99},{"ruleId":"202","severity":1,"message":"203","line":103,"column":41,"nodeType":"192","endLine":103,"endColumn":64},{"ruleId":"196","severity":1,"message":"204","line":24,"column":8,"nodeType":"200","endLine":24,"endColumn":25,"suggestions":"205"},{"ruleId":"190","severity":1,"message":"191","line":75,"column":33,"nodeType":"192","endLine":75,"endColumn":99},{"ruleId":"190","severity":1,"message":"191","line":88,"column":33,"nodeType":"192","endLine":88,"endColumn":99},{"ruleId":"184","severity":1,"message":"206","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"207","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":20},{"ruleId":"184","severity":1,"message":"208","line":17,"column":14,"nodeType":"186","messageId":"187","endLine":17,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":19,"column":15,"nodeType":"198","endLine":21,"endColumn":6},{"ruleId":"196","severity":1,"message":"209","line":21,"column":8,"nodeType":"200","endLine":21,"endColumn":10,"suggestions":"210"},{"ruleId":"196","severity":1,"message":"197","line":23,"column":15,"nodeType":"198","endLine":28,"endColumn":6},{"ruleId":"190","severity":1,"message":"191","line":81,"column":33,"nodeType":"192","endLine":81,"endColumn":99},{"ruleId":"190","severity":1,"message":"191","line":91,"column":37,"nodeType":"192","endLine":91,"endColumn":73},{"ruleId":"190","severity":1,"message":"191","line":95,"column":33,"nodeType":"192","endLine":95,"endColumn":99},{"ruleId":"211","severity":1,"message":"212","line":24,"column":11,"nodeType":"186","messageId":"213","endLine":24,"endColumn":16},{"ruleId":"196","severity":1,"message":"197","line":82,"column":15,"nodeType":"198","endLine":86,"endColumn":6},{"ruleId":"196","severity":1,"message":"204","line":86,"column":8,"nodeType":"200","endLine":86,"endColumn":23,"suggestions":"214"},{"ruleId":"196","severity":1,"message":"197","line":88,"column":15,"nodeType":"198","endLine":98,"endColumn":6},{"ruleId":"196","severity":1,"message":"215","line":98,"column":8,"nodeType":"200","endLine":98,"endColumn":18,"suggestions":"216"},{"ruleId":"196","severity":1,"message":"197","line":100,"column":15,"nodeType":"198","endLine":102,"endColumn":6},{"ruleId":"196","severity":1,"message":"199","line":102,"column":8,"nodeType":"200","endLine":102,"endColumn":10,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":147,"column":29,"nodeType":"220","messageId":"221","endLine":147,"endColumn":31},{"ruleId":"218","severity":1,"message":"219","line":157,"column":24,"nodeType":"220","messageId":"221","endLine":157,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":180,"column":33,"nodeType":"192","endLine":180,"endColumn":99},{"ruleId":"190","severity":1,"message":"191","line":193,"column":33,"nodeType":"192","endLine":193,"endColumn":99},{"ruleId":"202","severity":1,"message":"203","line":237,"column":53,"nodeType":"192","endLine":237,"endColumn":76},{"ruleId":"196","severity":1,"message":"197","line":14,"column":15,"nodeType":"198","endLine":16,"endColumn":6},{"ruleId":"196","severity":1,"message":"222","line":16,"column":8,"nodeType":"200","endLine":16,"endColumn":10,"suggestions":"223"},{"ruleId":"190","severity":1,"message":"191","line":46,"column":29,"nodeType":"192","endLine":46,"endColumn":88},{"ruleId":"190","severity":1,"message":"195","line":51,"column":33,"nodeType":"192","endLine":51,"endColumn":86},{"ruleId":"190","severity":1,"message":"195","line":52,"column":33,"nodeType":"192","endLine":52,"endColumn":88},{"ruleId":"190","severity":1,"message":"191","line":79,"column":33,"nodeType":"192","endLine":79,"endColumn":99},{"ruleId":"190","severity":1,"message":"191","line":93,"column":33,"nodeType":"192","endLine":93,"endColumn":99},{"ruleId":"202","severity":1,"message":"203","line":107,"column":41,"nodeType":"192","endLine":107,"endColumn":64},{"ruleId":"184","severity":1,"message":"207","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":20},{"ruleId":"184","severity":1,"message":"208","line":24,"column":14,"nodeType":"186","messageId":"187","endLine":24,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":26,"column":15,"nodeType":"198","endLine":28,"endColumn":6},{"ruleId":"196","severity":1,"message":"224","line":28,"column":8,"nodeType":"200","endLine":28,"endColumn":10,"suggestions":"225"},{"ruleId":"196","severity":1,"message":"197","line":30,"column":15,"nodeType":"198","endLine":35,"endColumn":6},{"ruleId":"196","severity":1,"message":"197","line":37,"column":15,"nodeType":"198","endLine":39,"endColumn":6},{"ruleId":"196","severity":1,"message":"199","line":39,"column":8,"nodeType":"200","endLine":39,"endColumn":10,"suggestions":"226"},{"ruleId":"218","severity":1,"message":"219","line":80,"column":29,"nodeType":"220","messageId":"221","endLine":80,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":105,"column":33,"nodeType":"192","endLine":105,"endColumn":99},{"ruleId":"190","severity":1,"message":"191","line":115,"column":37,"nodeType":"192","endLine":115,"endColumn":73},{"ruleId":"190","severity":1,"message":"191","line":119,"column":33,"nodeType":"192","endLine":119,"endColumn":99},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'style' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'languageDispatch'. Either include it or remove the dependency array.","ArrayExpression",["229"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["230"],"'Component' is defined but never used.","'withRouter' is defined but never used.","'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'languageDispatch'. Either include them or remove the dependency array.",["231"],"no-redeclare","'error' is already defined.","redeclared",["232"],"React Hook useEffect has missing dependencies: 'ans' and 'answerDispatch'. Either include them or remove the dependency array.",["233"],["234"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'questionDispatch'. Either include it or remove the dependency array.",["235"],"React Hook useEffect has missing dependencies: 'id' and 'questionDispatch'. Either include them or remove the dependency array.",["236"],["237"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"238","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"238","fix":"253"},"Update the dependencies array to be: [languageDispatch]",{"range":"254","text":"255"},"Update the dependencies array to be: [error, language, props.history]",{"range":"256","text":"257"},"Update the dependencies array to be: [id, languageDispatch]",{"range":"258","text":"259"},"Update the dependencies array to be: [error, answer, props.history]",{"range":"260","text":"261"},"Update the dependencies array to be: [ans, answerDispatch, question]",{"range":"262","text":"263"},{"range":"264","text":"255"},"Update the dependencies array to be: [questionDispatch]",{"range":"265","text":"266"},"Update the dependencies array to be: [id, questionDispatch]",{"range":"267","text":"268"},{"range":"269","text":"255"},[508,510],"[languageDispatch]",[756,773],"[error, language, props.history]",[789,791],"[id, languageDispatch]",[3261,3276],"[error, answer, props.history]",[3635,3645],"[ans, answerDispatch, question]",[3744,3746],[508,510],"[questionDispatch]",[1024,1026],"[id, questionDispatch]",[1305,1307]]