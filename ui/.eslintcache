[{"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\index.js":"1","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\reportWebVitals.js":"2","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\App.js":"3","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\UserContext.js":"4","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Error.js":"5","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\App.js":"6","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\ActionNames.js":"7","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Logout.js":"8","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Dashboard\\Dashboard.js":"9","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Login\\Login.js":"10","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Header\\Header.js":"11","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Sidebar\\Sidebar.js":"12","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\UserAction.js":"13","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\axios.js":"14","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\LanguageContext.js":"15","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\LanguageList.js":"16","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\AddLanguage.js":"17","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\EditLanguage.js":"18","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\LanguageAction.js":"19","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\AddQuestion.js":"20","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\QuestionAction.js":"21","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\QuestionContext.js":"22","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\QuestionList.js":"23","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\EditQuestion.js":"24","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\AnswerAction.js":"25","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\AnswerContext.js":"26","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\EditAnswer.js":"27","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\AnswerList.js":"28","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\SearchAnswerList.js":"29","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\AddAnswer.js":"30"},{"size":1110,"mtime":1612185168245,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1607401832726,"results":"33","hashOfConfig":"32"},{"size":339,"mtime":1607491692060,"results":"34","hashOfConfig":"32"},{"size":1695,"mtime":1615816398951,"results":"35","hashOfConfig":"32"},{"size":377,"mtime":1607401832723,"results":"36","hashOfConfig":"32"},{"size":2176,"mtime":1612273511699,"results":"37","hashOfConfig":"32"},{"size":954,"mtime":1612167433191,"results":"38","hashOfConfig":"32"},{"size":517,"mtime":1607401832719,"results":"39","hashOfConfig":"32"},{"size":6678,"mtime":1612273511701,"results":"40","hashOfConfig":"32"},{"size":3447,"mtime":1607515164318,"results":"41","hashOfConfig":"32"},{"size":1743,"mtime":1607515164315,"results":"42","hashOfConfig":"32"},{"size":1676,"mtime":1607515164321,"results":"43","hashOfConfig":"32"},{"size":1396,"mtime":1607401832714,"results":"44","hashOfConfig":"32"},{"size":141,"mtime":1616814927373,"results":"45","hashOfConfig":"32"},{"size":1781,"mtime":1607515164321,"results":"46","hashOfConfig":"32"},{"size":5287,"mtime":1607515164317,"results":"47","hashOfConfig":"32"},{"size":6327,"mtime":1607515164316,"results":"48","hashOfConfig":"32"},{"size":6633,"mtime":1607515164316,"results":"49","hashOfConfig":"32"},{"size":2817,"mtime":1607515164312,"results":"50","hashOfConfig":"32"},{"size":11170,"mtime":1607762590550,"results":"51","hashOfConfig":"32"},{"size":3232,"mtime":1612178145317,"results":"52","hashOfConfig":"32"},{"size":1781,"mtime":1612415339980,"results":"53","hashOfConfig":"32"},{"size":5974,"mtime":1612273511703,"results":"54","hashOfConfig":"32"},{"size":7572,"mtime":1607693229874,"results":"55","hashOfConfig":"32"},{"size":2734,"mtime":1607693347237,"results":"56","hashOfConfig":"32"},{"size":1698,"mtime":1607693347245,"results":"57","hashOfConfig":"32"},{"size":7291,"mtime":1607692949141,"results":"58","hashOfConfig":"32"},{"size":5090,"mtime":1612184936529,"results":"59","hashOfConfig":"32"},{"size":4503,"mtime":1612273511704,"results":"60","hashOfConfig":"32"},{"size":9009,"mtime":1612273511702,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"tbkpjy",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\index.js",[],["137","138"],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\reportWebVitals.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\App.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\UserContext.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Error.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\App.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\ActionNames.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Logout.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Dashboard\\Dashboard.js",["139","140","141","142","143","144","145","146","147"],"import React, { useState, useEffect } from 'react';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nimport * as lactions from '../../../Actions/LanguageAction';\r\nimport * as actions from '../../../Actions/QuestionAction';\r\n\r\nimport { useLanguageDispatch, useLanguageState } from '../../../Context/LanguageContext';\r\nimport { useQuestionDispatch, useQuestionState } from '../../../Context/QuestionContext';\r\n\r\nfunction Dashboard(props) {\r\n\r\n\r\n    var style = {\r\n        height: \"150px\"\r\n    }\r\n\r\n    var path = \"../assets/images/bottom-bg.png\";\r\n    var bgImageStyle = {\r\n        backgroundImage: \"url(\" + path + \")\",\r\n        height: \"100%\",\r\n        backgroundPosition: 'bottom',\r\n        backgroundRepeat: 'no-repeat'\r\n    }\r\n\r\n    var { languages } = useLanguageState();\r\n    var languageDispatch = useLanguageDispatch();\r\n\r\n    var { questions } = useQuestionState();\r\n    var questionDispatch = useQuestionDispatch();\r\n\r\n    var [language, setLanguage] = useState(\"-1\");\r\n    var [que, setQue] = useState(\"\");\r\n    var [flag, setFlag] = useState(0);\r\n\r\n    useEffect(async () => {\r\n        await lactions.getAllLanguage(languageDispatch);\r\n    }, [])\r\n\r\n    var lan = languages.map(l => {\r\n        lan = (<option value={l._id}>{l.name}</option>)\r\n        return lan;\r\n    })\r\n\r\n    const getQuestion = async (event) => {\r\n        event.preventDefault();\r\n        var word = event.target.value\r\n\r\n        setQue(word)\r\n        if (word == \"\" && language == \"-1\") {\r\n            setFlag(0)\r\n        }\r\n        else {\r\n            let data = \"\";\r\n            if (language !== \"-1\" && word!==\"\") {\r\n                data = {\r\n                    question: word,\r\n                    languageId: language\r\n                }\r\n            }\r\n            else if(language == \"-1\" && word!==\"\") {\r\n                data = {\r\n                    question: word\r\n                }\r\n            }\r\n            else{\r\n                data = {\r\n                    languageId: language\r\n                }\r\n            }\r\n            setFlag(1);\r\n            await actions.getSearchQuestion(questionDispatch, data);\r\n        }\r\n    }\r\n\r\n    const getQuestionByLang = async (event) => {\r\n        event.preventDefault();\r\n        var lan = event.target.value;\r\n        setLanguage(lan)\r\n        let data = \"\";\r\n        if (lan == \"-1\") {\r\n            setFlag(0)\r\n        }\r\n        else {\r\n            if (que !== \"\") {\r\n                data = {\r\n                    question: que,\r\n                    languageId: lan,\r\n                }\r\n            }\r\n            else {\r\n                data = {\r\n                    languageId: lan,\r\n                }\r\n            }\r\n            setFlag(1);\r\n            await actions.getSearchQuestion(questionDispatch, data);\r\n        }\r\n\r\n    }\r\n\r\n    const viewanswer = (id) => {\r\n        props.history.push(\"/admin/answerlist/\" + id)\r\n    }\r\n\r\n    var data = null;\r\n    data = questions.map(q => {\r\n\r\n        data = (\r\n            <tr>\r\n                <td><a onClick={() => viewanswer(q._id)}>{q.question}</a></td>\r\n            </tr>\r\n        )\r\n        return data;\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div className=\"content-wrapper\" style={bgImageStyle}>\r\n                    <div className=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"breadcrumb\">\r\n                                <a href=\"/admin\" className=\"breadcrumb-item\"><i className=\"icon-home2 mr-2\"></i> Home</a>\r\n                                <span className=\"breadcrumb-item active\">Dashboard</span>\r\n                            </div>\r\n                            <a href=\"#\" className=\"header-elements-toggle text-default d-md-none\"><i className=\"icon-more\"></i></a>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form>\r\n                                            <div class=\"form-group row\">\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <input class=\"form-control\" type=\"text\" name=\"question\"\r\n                                                        placeholder=\"Search Your Question Here\"\r\n                                                        value={que} onChange={getQuestion} />\r\n                                                </div>\r\n                                                <div class=\"col-lg-3\">\r\n                                                    <select id=\"language\" name=\"language\" class=\"form-control\" required=\"\"\r\n                                                        onChange={getQuestionByLang} value={language}>\r\n                                                        <option value=\"-1\">Select Language</option>\r\n                                                        {lan}\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            {flag !== 0 ? <table class=\"table table-hover\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>Result Found</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {data}\r\n                                                </tbody>\r\n                                            </table>\r\n                                                : null}\r\n\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Login\\Login.js",["148","149"],"import { useEffect, useState } from 'react'\r\nimport * as actions from '../../../Actions/UserAction';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { useUserDispatch, useUserState } from '../../../Context/UserContext';\r\n\r\nfunction Login(props) {\r\n\r\n    var userDispatch = useUserDispatch();\r\n    var { error, token } = useUserState();\r\n    var [username, setUsername] = useState(\"\");\r\n    var [password, setPassword] = useState(\"\");\r\n\r\n\r\n    var logo = \"../assets/images/logo.jpeg\";\r\n    var path = \"../assets/images/about_layout.png\";\r\n    var style = {\r\n        backgroundImage: \"url(\" + path + \")\",\r\n        height: \"100%\",\r\n        backgroundPosition: 'center',\r\n        //backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat'\r\n    }\r\n\r\n    const login = async (event) => {\r\n\r\n        event.preventDefault();\r\n        let user = {\r\n            username: username,\r\n            password: password\r\n        }\r\n\r\n        await actions.loginAction(userDispatch, user);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={style}>\r\n            {token != null ? <Redirect to=\"/admin\" /> : null}\r\n            <div className=\"content d-flex justify-content-center align-items-center\" >\r\n                <form className=\"login-form\" style={{ marginTop: \"96px\" }}\r\n                    onSubmit={login} >\r\n                    <div className=\"card mb-0\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"text-center mb-3\">\r\n                                <img src={logo} width=\"220px\" />\r\n                                <h5 className=\"mb-0\">Login to your account</h5>\r\n                                <span className=\"d-block text-muted\">Enter your credentials below</span>\r\n\r\n\r\n\r\n                                <div style={{ color: \"red\", fontSize: \"18px\" }}>{error}</div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Username\"\r\n                                    value={username} onChange={(e) => { setUsername(e.target.value) }}\r\n                                />\r\n\r\n                                <div className=\"form-control-feedback\">\r\n                                    <i className=\"icon-user text-muted\"></i>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-group-feedback form-group-feedback-left\">\r\n\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\"\r\n                                    value={password} onChange={(e) => { setPassword(e.target.value) }}\r\n                                />\r\n\r\n                                <div className=\"form-control-feedback\">\r\n                                    <i className=\"icon-lock2 text-muted\"></i>\r\n                                </div>\r\n                            </div>\r\n\r\n                           \r\n\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default withRouter(Login);","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Header\\Header.js",["150","151","152"],"import React from 'react';\r\nimport Avatar from 'react-avatar';\r\n\r\nfunction Header(props) {\r\n\r\n\tvar logo=\"../../assets/images/logo.jpeg\";\r\n\tvar user = JSON.parse(localStorage.getItem('user'));\r\n\t\r\n\r\n\tvar style = {\r\n\t\theight: 70,\r\n\t\timg:{\r\n\t\t\twidth:\"130px\",\r\n\t\t\theight:\"45px\"\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"navbar navbar-expand-md navbar-dark\" style={style}>\r\n\t\t\t\t<div className=\"navbar-brand\">\r\n\t\t\t\t\t<a href=\"#\" className=\"d-inline-block\">\r\n\t\t\t\t\t\t<img src={logo} alt=\"\" style={style.img}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbar-mobile\">\r\n\t\t\t\t\t<ul className=\"navbar-nav\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"navbar-nav-link sidebar-control sidebar-main-toggle d-none d-md-block\">\r\n\t\t\t\t\t\t\t\t<i className=\"icon-paragraph-justify3\"></i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\r\n\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t<span class=\"badge bg-success ml-md-3 mr-md-auto\">Online</span>\r\n\r\n\t\t\t\t\t<ul className=\"navbar-nav\">\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<li className=\"nav-item dropdown dropdown-user\">\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"navbar-nav-link d-flex align-items-center dropdown-toggle\" data-toggle=\"dropdown\">\r\n\t\t\t\t\t\t\t\t{/* <img src=\"../assets/images/demo/users/face13.jpg\" className=\"rounded-circle mr-2\" height=\"34\" alt=\"\"/> */}\r\n\t\t\t\t\t\t\t\t<Avatar name={user==null?null:user.username} round={true} size=\"50\" color=\"#26a69a\" style={{ margin: \"5px 10px 10px auto\" }} />\r\n\t\t\t\t\t\t\t\t<span>{user==null?null:user.username}</span>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t<div className=\"dropdown-menu dropdown-menu-right\">\r\n\t\t\t\t\t\t\t\t<a href=\"/admin/logout\" className=\"dropdown-item\"><i className=\"icon-switch2\"></i> Logout</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Header;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Sidebar\\Sidebar.js",["153","154"],"import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Sidebar(proprs) {\r\n\tvar style={\r\n\t\theight: \"100%\"\t  \r\n\t}\r\n\treturn (\r\n\r\n\t\t<>\r\n\r\n\t\t\t<div className=\"sidebar sidebar-dark sidebar-main sidebar-expand-md\" style={style} >\r\n\r\n\t\t\t\t<div className=\"sidebar-content\">\r\n\t\t\t\t\t<div className=\"card card-sidebar-mobile\">\r\n\t\t\t\t\t\t<ul className=\"nav nav-sidebar\" data-nav-type=\"accordion\">\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<a href=\"/admin\" className=\"nav-link active\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"icon-home4\"></i>\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\tDashboard\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"nav-item nav-item-submenu\">\r\n\t\t\t\t\t\t\t\t<a  className=\"nav-link\"><i className=\"icon-books\"></i> <span>Language</span></a>\r\n\r\n\t\t\t\t\t\t\t\t<ul className=\"nav nav-group-sub\" data-submenu-title=\"language\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\"><a href=\"/admin/addlanguage\" className=\"nav-link\">Add Langauge</a></li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\"><a href=\"/admin/languagelist\" className=\"nav-link\">Langauge List</a></li>\r\n\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li className=\"nav-item nav-item-submenu\">\r\n\t\t\t\t\t\t\t\t<a  className=\"nav-link\"><i className=\"icon-question7\"></i> <span>Question</span></a>\r\n\r\n\t\t\t\t\t\t\t\t<ul className=\"nav nav-group-sub\" data-submenu-title=\"question\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\"><a href=\"/admin/addquestion\" className=\"nav-link\">Add Question</a></li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\"><a href=\"/admin/questionlist\" className=\"nav-link\">Question List</a></li>\r\n\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div></div>\r\n\t\t</>\r\n\r\n\t)\r\n}\r\nexport default withRouter(Sidebar);","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\UserAction.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\axios.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\LanguageContext.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\LanguageList.js",["155","156","157","158","159","160","161","162"],"import React, { useEffect } from 'react'\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/LanguageAction';\r\n\r\nimport { useLanguageDispatch, useLanguageState } from '../../../Context/LanguageContext';\r\n\r\nfunction LanguageList(props) {\r\n\r\n    var languageDispatch = useLanguageDispatch();\r\n    var { languages } = useLanguageState();\r\n\r\n    useEffect(async () => {\r\n        await actions.getAllLanguage(languageDispatch);\r\n    }, [])\r\n\r\n    const edit = (id) => {\r\n        props.history.push(\"/admin/editlanguage/\" + id)\r\n    }\r\n\r\n    const remove = async (id) => {\r\n        if (window.confirm('Are you sure to delete this language ?')) {\r\n            await actions.removeLanguage(languageDispatch, id);\r\n            await actions.getAllLanguage(languageDispatch);\r\n        }\r\n    }\r\n\r\n    var data = null;\r\n    data = languages.map(l => {\r\n       \r\n        data = (\r\n            <tr>\r\n                <td>{l.name}</td>\r\n                <td>{l.description}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td class=\"text-center\">\r\n                    <div class=\"list-icons\">\r\n                        <div class=\"dropdown\">\r\n                            <a href=\"#\" class=\"list-icons-item\" data-toggle=\"dropdown\">\r\n                                <i class=\"icon-menu9\"></i>\r\n                            </a>\r\n\r\n                            <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                <a onClick={() => edit(l._id)} class=\"dropdown-item\"><i class=\"icon-pencil\"></i>Edit</a>\r\n                                <a onClick={() => remove(l._id)} class=\"dropdown-item\"><i class=\"icon-cross2\"></i>Delete</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n\r\n        )\r\n        return data;\r\n    })\r\n\r\n    const addlanguage = () => {\r\n        props.history.push(\"/admin/addlanguage\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4> <span class=\"font-weight-semibold\">Language List</span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i> Dashboard</a>\r\n                                    <a href=\"/admin/languagelist\" class=\"breadcrumb-item\">Language List</a>\r\n\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n                                        <h5 class=\"card-title\"></h5>\r\n                                        <div class=\"header-elements\">\r\n                                            <div class=\"list-icons\">\r\n                                                <button onClick={addlanguage} class=\"btn bg-teal-400 ml-3\">Add <i class=\"icon-plus3 ml-2\"></i></button>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <table class=\"table datatable-basic table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Name</th>\r\n                                                <th>Description</th>\r\n                                                <th colSpan=\"4\" class=\"text-center\">Actions</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            {data}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LanguageList;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\AddLanguage.js",["163","164","165"],"import React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/LanguageAction';\r\n\r\nimport { useLanguageDispatch, useLanguageState } from '../../../Context/LanguageContext';\r\n\r\n\r\n\r\nfunction AddLanguage(props) {\r\n\r\n    var { error, language } = useLanguageState();\r\n    var languageDispatch = useLanguageDispatch();\r\n    var [name, setName] = useState(\"\");\r\n    var [description, setDescription] = useState(\"\");\r\n    var [validation, setValidation] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (language != null) {\r\n            props.history.push(\"/admin/languagelist\")\r\n        }\r\n    }, [error, language])\r\n\r\n    const reset = () => {\r\n        setName(\"\");\r\n        setDescription(\"\");\r\n        setValidation(\"\");\r\n        error = \"\";\r\n        language = \"\";\r\n    }\r\n\r\n\r\n    const addlanguage = async (event) => {\r\n        event.preventDefault();\r\n        if (await validate()) {\r\n            const data = {\r\n                name,\r\n                description\r\n            }\r\n            await actions.addLanguage(languageDispatch,data);\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n        let isValid = true;\r\n\r\n        if (!name) {\r\n            isValid = false;\r\n            err[\"name\"] = \"Please enter name.\";\r\n        }\r\n\r\n        if (!description) {\r\n            isValid = false;\r\n            err[\"description\"] = \"Please enter description.\";\r\n        }\r\n\r\n        setValidation(err)\r\n        return isValid;\r\n    }\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4><span class=\"font-weight-semibold\">Add Language </span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i>Dashboard</a>\r\n                                    <a href=\"/admin/addlanguage\" class=\"breadcrumb-item\">Add Language</a>\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form onSubmit={addlanguage} onReset={reset}>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Name <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <input class=\"form-control\" type=\"text\" name=\"name\" placeholder=\"Enter Name\"\r\n                                                        value={name} onChange={(e) => setName(e.target.value)} />\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"name\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Description <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <textarea rows=\"3\" name=\"description\" cols=\"3\" class=\"form-control\" placeholder=\"Enter Description\" aria-invalid=\"true\"\r\n                                                        value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"description\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            <div class=\"form-group row mb-0\">\r\n                                                <div class=\"col-lg-10 ml-lg-auto\">\r\n                                                    <button type=\"reset\" style={{ borderColor: \"#26a69a\" }} class=\"btn btn-light\"\r\n                                                    >Reset<i class=\"icon-reset ml-2\"></i></button>\r\n                                                    <button type=\"submit\" class=\"btn bg-teal-400 ml-3\">Add <i class=\"icon-paperplane ml-2\"></i></button>\r\n                                                    <div style={{ color: \"red\", fontSize: \"18px\", paddingTop: \"5px\" }}>{error}</div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddLanguage);\r\n","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Language\\EditLanguage.js",["166","167","168","169","170","171","172","173","174"],"import React, { Component, useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/LanguageAction';\r\n\r\nimport { useLanguageState, useLanguageDispatch } from '../../../Context/LanguageContext';\r\n\r\n\r\nfunction EditLanguage(props) {\r\n    var { error, language } = useLanguageState();\r\n    var languageDispatch = useLanguageDispatch();\r\n    var [name, setName] = useState(\"\");\r\n    var [description, setDescription] = useState(\"\");\r\n    var [validation, setValidation] = useState(\"\");\r\n    var [id, setId] = useState(props.match.params.id);\r\n\r\n    useEffect(async () => {\r\n        await actions.getLangaugeById(languageDispatch, id);\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (language != null) {\r\n            setName(language.name)\r\n            setDescription(language.description)\r\n        }\r\n    }, [language])\r\n\r\n\r\n\r\n    const reset = () => {\r\n        setName(\"\");\r\n        setDescription(\"\");\r\n        setValidation(\"\");\r\n        error = \"\";\r\n        language = \"\";\r\n    }\r\n\r\n    const editlanguage = async (event) => {\r\n        event.preventDefault();\r\n        if (await validate()) {\r\n            const data = {\r\n                name,\r\n                description\r\n            }\r\n            await actions.updateLanguage(languageDispatch, id, data);\r\n            props.history.push('/admin/languagelist')\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n        let isValid = true;\r\n\r\n        if (!name) {\r\n            isValid = false;\r\n            err[\"name\"] = \"Please enter name.\";\r\n        }\r\n\r\n        if (!description) {\r\n            isValid = false;\r\n            err[\"description\"] = \"Please enter description.\";\r\n        }\r\n\r\n        setValidation(err)\r\n        return isValid;\r\n    }\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4><span class=\"font-weight-semibold\">Edit language </span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i>Dashboard</a>\r\n                                    <a href=\"#\" class=\"breadcrumb-item\">Edit Language</a>\r\n\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form onSubmit={editlanguage} onReset={reset}>\r\n                                            <input type=\"hidden\" name=\"id\" value={id} />\r\n\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Name <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <input class=\"form-control\" type=\"name\" name=\"name\"\r\n                                                        value={name} onChange={(e) => setName(e.target.value)} />\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"name\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Description <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <textarea rows=\"3\" name=\"description\" cols=\"3\" class=\"form-control\" placeholder=\"Enter Description\" aria-invalid=\"true\"\r\n                                                        value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"description\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row mb-0\">\r\n                                                <div class=\"col-lg-10 ml-lg-auto\">\r\n                                                    <button type=\"reset\" style={{ borderColor: \"#26a69a\" }} class=\"btn btn-light\"\r\n                                                    >Reset<i class=\"icon-reset ml-2\"></i></button>\r\n                                                    <button type=\"submit\" class=\"btn bg-teal-400 ml-3\">Edit <i class=\"icon-paperplane ml-2\"></i></button>\r\n                                                    <div style={{ color: \"red\", fontSize: \"18px\", paddingTop: \"5px\" }}>{error}</div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditLanguage;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\LanguageAction.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\AddQuestion.js",["175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React, { useEffect, useState } from 'react'\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as lactions from '../../../Actions/LanguageAction';\r\nimport * as actions from '../../../Actions/QuestionAction';\r\nimport * as aactions from '../../../Actions/AnswerAction';\r\n\r\nimport { useLanguageDispatch, useLanguageState } from '../../../Context/LanguageContext';\r\nimport { useQuestionDispatch, useQuestionState } from '../../../Context/QuestionContext';\r\nimport { useAnswerDispatch, useAnswerState } from '../../../Context/AnswerContext';\r\n\r\nfunction AddQuestion(props) {\r\n\r\n    var { languages } = useLanguageState();\r\n    var languageDispatch = useLanguageDispatch();\r\n\r\n    var { error, question } = useQuestionState();\r\n    var questionDispatch = useQuestionDispatch();\r\n\r\n    var { error, answer } = useAnswerState();\r\n    var answerDispatch = useAnswerDispatch();\r\n\r\n    var [language, setLanguage] = useState([]);\r\n    var [que, setQue] = useState(\"\");\r\n    var [ans, setAns] = useState([]);\r\n    var [validation, setValidation] = useState(\"\");\r\n\r\n    const renderAnswer = (ans, handleChange, deleteAnswer) => {\r\n        return ans.map(detail => (\r\n            <div key={detail.key} >\r\n\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-form-label col-lg-2\">Answer <span class=\"text-danger\">*</span></label>\r\n\r\n                    <div class=\"col-lg-9\">\r\n                        <SunEditor\r\n                            onChange={(val) => handleChange(detail.key, val)}\r\n                            placeholder=\"Write Answer Here.\"\r\n                            lang=\"en\"\r\n                            height=\"100\"\r\n                            setOptions={{\r\n                                buttonList: [\r\n                                    [\"undo\", \"redo\"],\r\n                                    [\"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\",\r\n                                        \"fontColor\", \"textStyle\"],\r\n                                    [\"removeFormat\"],\r\n                                    [\"table\", \"list\", \"lineHeight\"]\r\n                                ]\r\n                            }} />\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button class=\"btn bg-teal-400 ml-1\" onClick={() => deleteAnswer(detail.key)}>X</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    const addAnswer = () => {\r\n        let newAns = [...ans];\r\n        newAns.push({ key: ans.length, ans: \"\" });\r\n        setAns(newAns);\r\n    }\r\n\r\n    const deleteAnswer = (key) => {\r\n        let newAns = [...ans].filter(detail => detail.key !== key);\r\n        setAns(newAns);\r\n    }\r\n    const handleDataChange = (key, value) => {\r\n        let newAns = [...ans];\r\n        newAns[key].ans = value;\r\n        setAns(newAns);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (answer != null) {\r\n            props.history.push(\"/admin/questionlist\")\r\n        }\r\n    }, [error, answer])\r\n\r\n    useEffect(async () => {\r\n        if (question != null) {\r\n            ans.forEach(async (final) => {\r\n                const answerdata = {\r\n                    questionId: question._id,\r\n                    answer: final.ans\r\n                }\r\n                await aactions.addAnswer(answerDispatch, answerdata)\r\n            });\r\n        }\r\n    }, [question])\r\n\r\n    useEffect(async () => {\r\n        await lactions.getAllLanguage(languageDispatch);\r\n    }, [])\r\n\r\n    var lan = languages.map(l => {\r\n        lan = (<option value={l._id}>{l.name}</option>)\r\n        return lan;\r\n    })\r\n\r\n    const reset = () => {\r\n        setLanguage(\"\");\r\n        setQue(\"\");\r\n        setValidation(\"\");\r\n        setAns(\"\");\r\n        error = \"\";\r\n        question = \"\";\r\n    }\r\n\r\n    const onChangeLanguage = async (event) => {\r\n        var selected = [];\r\n        for (var option of document.getElementById('language').options) {\r\n            if (option.selected) {\r\n                selected.push(option.value);\r\n            }\r\n        }\r\n        setLanguage(selected)\r\n    }\r\n\r\n    const add = async (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const addquestion = async (event) => {\r\n        event.preventDefault();\r\n        if (await validate()) {\r\n            const data = {\r\n                languageId: language,\r\n                question: que\r\n            }\r\n            await actions.addQuestion(questionDispatch, data);\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n        let isValid = true;\r\n\r\n        if (language.length == 0) {\r\n            isValid = false;\r\n            err[\"language\"] = \"Please select atleast one language.\";\r\n        }\r\n\r\n        if (!que) {\r\n            isValid = false;\r\n            err[\"question\"] = \"Please enter question.\";\r\n        }\r\n\r\n        if (ans.length == 0) {\r\n            isValid = false;\r\n            err[\"answer\"] = \"Please add atleast one answer.\";\r\n        }\r\n\r\n        setValidation(err)\r\n        return isValid;\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4><span class=\"font-weight-semibold\">Add Question </span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i>Dashboard</a>\r\n                                    <a href=\"/admin/addquestion\" class=\"breadcrumb-item\">Add Question</a>\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form onSubmit={add} onReset={reset}>\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Languages <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <select id=\"language\" name=\"language\" multiple class=\"form-control\" required=\"\" size=\"2\"\r\n                                                        onChange={onChangeLanguage}\r\n                                                    >\r\n                                                        {lan}\r\n                                                    </select>\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"language\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Question <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <input class=\"form-control\" type=\"text\" name=\"question\" placeholder=\"Enter Question\"\r\n                                                        value={que} onChange={(e) => setQue(e.target.value)} />\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"question\"]}</div>\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"answer\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {renderAnswer(ans, handleDataChange, deleteAnswer)}\r\n                                            <div class=\"form-group row\">\r\n                                                <div class=\"card-header header-elements-inline\" style={{ marginLeft: \"140px\" }}>\r\n                                                    <h5 class=\"card-title\"></h5>\r\n                                                    <div class=\"header-elements\">\r\n                                                        <div class=\"list-icons\">\r\n                                                            <button onClick={addAnswer} class=\"btn bg-teal-400 ml-3\" >Add Answer + </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row mb-0\">\r\n                                                <div class=\"col-lg-10 ml-lg-auto\">\r\n                                                    <button type=\"reset\" style={{ borderColor: \"#26a69a\" }} class=\"btn btn-light\"\r\n                                                    >Reset<i class=\"icon-reset ml-2\"></i></button>\r\n                                                    <button type=\"submit\" onClick={addquestion} class=\"btn bg-teal-400 ml-3\">Add <i class=\"icon-paperplane ml-2\"></i></button>\r\n                                                    <div style={{ color: \"red\", fontSize: \"18px\", paddingTop: \"5px\" }}>{error}</div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddQuestion);\r\n","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\QuestionAction.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\QuestionContext.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\QuestionList.js",["188","189","190","191","192","193","194","195","196","197"],"import React, { useEffect } from 'react'\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/QuestionAction';\r\n\r\nimport { useQuestionDispatch, useQuestionState } from '../../../Context/QuestionContext';\r\n\r\nfunction QuestionList(props) {\r\n\r\n    var questionDispatch = useQuestionDispatch();\r\n    var { questions } = useQuestionState();\r\n\r\n    useEffect(async () => {\r\n        await actions.getAllQuestion(questionDispatch);\r\n    }, [])\r\n\r\n    const edit = (id) => {\r\n        props.history.push(\"/admin/editquestion/\" + id)\r\n    }\r\n\r\n    const viewanswer = (id) => {\r\n        props.history.push(\"/admin/answerlist/\" + id)\r\n    }\r\n\r\n    const remove = async (id) => {\r\n        if (window.confirm('Are you sure to delete this Question ?')) {\r\n            await actions.removeQuestion(questionDispatch, id);\r\n            await actions.getAllQuestion(questionDispatch);\r\n        }\r\n    }\r\n\r\n    var data = null;\r\n    data = questions.map(q => {\r\n\r\n        var lan = \"\";\r\n        q.data.languageId.forEach(l => {\r\n            lan += l.name + \" \"\r\n        });\r\n        data = (\r\n            <tr>\r\n                <td>{lan}</td>\r\n                <td>{q.data.question}</td>\r\n                <td>{q.count}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td class=\"text-center\">\r\n                    <div class=\"list-icons\">\r\n                        <div class=\"dropdown\">\r\n                            <a href=\"#\" class=\"list-icons-item\" data-toggle=\"dropdown\">\r\n                                <i class=\"icon-menu9\"></i>\r\n                            </a>\r\n\r\n                            <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                <a onClick={() => edit(q.data._id)} class=\"dropdown-item\"><i class=\"icon-pencil\"></i>Edit</a>\r\n                                <a onClick={() => remove(q.data._id)} class=\"dropdown-item\"><i class=\"icon-cross2\"></i>Delete</a>\r\n                                <a onClick={() => viewanswer(q.data._id)} class=\"dropdown-item\"><i class=\"icon-list-unordered\"></i>View Answers</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n\r\n        )\r\n        return data;\r\n    })\r\n\r\n    const addquestion = () => {\r\n        props.history.push(\"/admin/addquestion\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4> <span class=\"font-weight-semibold\">Question List</span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i> Dashboard</a>\r\n                                    <a href=\"/admin/questionlist\" class=\"breadcrumb-item\">Question List</a>\r\n\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n                                        <h5 class=\"card-title\"></h5>\r\n                                        <div class=\"header-elements\">\r\n                                            <div class=\"list-icons\">\r\n                                                <button onClick={addquestion} class=\"btn bg-teal-400 ml-3\">Add <i class=\"icon-plus3 ml-2\"></i></button>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <table class=\"table datatable-basic table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Language</th>\r\n                                                <th>Question</th>\r\n                                                <th>Total Answer</th>\r\n                                                <th colSpan=\"3\" class=\"text-center\">Actions</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            {data}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionList;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\EditQuestion.js",["198","199","200","201","202","203","204","205","206","207","208"],"import React, {useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as lactions from '../../../Actions/LanguageAction';\r\nimport * as actions from '../../../Actions/QuestionAction';\r\n\r\nimport { useLanguageDispatch, useLanguageState } from '../../../Context/LanguageContext';\r\nimport { useQuestionDispatch, useQuestionState } from '../../../Context/QuestionContext';\r\n\r\n\r\nfunction EditQuestion(props) {\r\n\r\n    var { languages } = useLanguageState();\r\n    var languageDispatch = useLanguageDispatch();\r\n\r\n    var { error, question } = useQuestionState();\r\n    var questionDispatch = useQuestionDispatch();\r\n\r\n    var [language, setLanguage] = useState([]);\r\n    var [que, setQue] = useState(\"\");\r\n    var [validation, setValidation] = useState(\"\");\r\n    var [id, setId] = useState(props.match.params.id);\r\n\r\n    useEffect(async () => {\r\n        await actions.getQuestionById(questionDispatch, id);\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (question != null) {\r\n            setQue(question.question)\r\n            setLanguage(question.languageId)\r\n        }\r\n    }, [question])\r\n\r\n    useEffect(async () => {\r\n        await lactions.getAllLanguage(languageDispatch);\r\n    }, [])\r\n\r\n    var lan = languages.map(l => {\r\n        lan = (<option value={l._id}>{l.name}</option>)\r\n        return lan;\r\n    })\r\n\r\n    const reset = () => {\r\n        setLanguage(\"\");\r\n        setQue(\"\");\r\n        setValidation(\"\");\r\n        error = \"\";\r\n        question = \"\";\r\n    }\r\n\r\n    const onChangeLanguage = async (event) => {\r\n        var selected = [];\r\n        for (var option of document.getElementById('language').options) {\r\n            if (option.selected) {\r\n                selected.push(option.value);\r\n            }\r\n        }\r\n        setLanguage(selected)\r\n    }\r\n\r\n    const editquestion = async (event) => {\r\n        event.preventDefault();\r\n        if (await validate()) {\r\n            const data = {\r\n                languageId: language,\r\n                question: que\r\n            }\r\n            await actions.updateQuestion(questionDispatch, id, data);\r\n            props.history.push('/admin/questionlist')\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n        let isValid = true;\r\n\r\n        if (language.length == 0) {\r\n            isValid = false;\r\n            err[\"language\"] = \"Please select atleast one language.\";\r\n        }\r\n\r\n        if (!que) {\r\n            isValid = false;\r\n            err[\"question\"] = \"Please enter question.\";\r\n        }\r\n\r\n        setValidation(err)\r\n        return isValid;\r\n    }\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4><span class=\"font-weight-semibold\">Edit Question </span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i>Dashboard</a>\r\n                                    <a href=\"#\" class=\"breadcrumb-item\">Edit Question</a>\r\n\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form onSubmit={editquestion} onReset={reset}>\r\n                                            <input type=\"hidden\" name=\"id\" value={id} />\r\n\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Languages <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <select id=\"language\" name=\"language\" multiple class=\"form-control\" required=\"\" size=\"2\"\r\n                                                        onChange={onChangeLanguage} value={language}\r\n                                                    >\r\n                                                        {lan}\r\n                                                    </select>\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"language\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Question <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <input class=\"form-control\" type=\"text\" name=\"question\" placeholder=\"Enter Question\"\r\n                                                        value={que} onChange={(e) => setQue(e.target.value)} />\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"question\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row mb-0\">\r\n                                                <div class=\"col-lg-10 ml-lg-auto\">\r\n                                                    <button type=\"reset\" style={{ borderColor: \"#26a69a\" }} class=\"btn btn-light\"\r\n                                                    >Reset<i class=\"icon-reset ml-2\"></i></button>\r\n                                                    <button type=\"submit\" class=\"btn bg-teal-400 ml-3\">Edit <i class=\"icon-paperplane ml-2\"></i></button>\r\n                                                    <div style={{ color: \"red\", fontSize: \"18px\", paddingTop: \"5px\" }}>{error}</div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditQuestion;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Actions\\AnswerAction.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\Context\\AnswerContext.js",[],"H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\EditAnswer.js",["209","210","211","212","213","214","215","216","217","218"],"import React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/AnswerAction';\r\n\r\nimport { useAnswerDispatch, useAnswerState } from '../../../Context/AnswerContext';\r\nimport { QuestionProvider } from '../../../Context/QuestionContext';\r\n\r\nfunction EditAnswer(props) {\r\n\r\n    var { error, answer } = useAnswerState();\r\n    var answerDispatch = useAnswerDispatch();\r\n\r\n    var [ans, setAns] = useState([]);\r\n    var [validation, setValidation] = useState(\"\");\r\n    var [id, setId] = useState(props.match.params.id);\r\n\r\n    useEffect(async () => {\r\n        await actions.getAnswerById(answerDispatch, id);\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (answer != null) {\r\n            setAns(answer.answer)\r\n        }\r\n    }, [answer])\r\n\r\n    const handleChange = (value) => {\r\n        setAns(value);\r\n    }\r\n\r\n    const reset = () => {\r\n        setAns(\"\");\r\n        setValidation(\"\");\r\n        error = \"\";\r\n        answer = \"\";\r\n    }\r\n\r\n    const editanswer = async (event) => {\r\n        event.preventDefault();\r\n        if (await validate()) {\r\n            const data = {\r\n                answer: ans\r\n            }\r\n            await actions.updateAnswer(answerDispatch, id, data);\r\n            props.history.push('/admin/answerlist/'+answer.questionId)\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n        let isValid = true;\r\n\r\n        if (!answer) {\r\n            isValid = false;\r\n            err[\"answer\"] = \"Please enter answer.\";\r\n        }\r\n\r\n        setValidation(err)\r\n        return isValid;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4><span class=\"font-weight-semibold\">Edit Answer </span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i>Dashboard</a>\r\n                                    <a href=\"#\" class=\"breadcrumb-item\">Edit Answer</a>\r\n\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form onSubmit={editanswer} onReset={reset}>\r\n                                            <input type=\"hidden\" name=\"id\" value={id} />\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Answer <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <SunEditor\r\n                                                        setContents={ans}\r\n                                                        onChange={(val) =>setAns(val)}\r\n                                                        placeholder=\"Write Answer Here.\"\r\n                                                        lang=\"en\"\r\n                                                        height=\"100\"\r\n                                                        setOptions={{\r\n                                                            buttonList: [\r\n                                                                [\"undo\", \"redo\"],\r\n                                                                [\"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\",\r\n                                                                    \"fontColor\", \"textStyle\"],\r\n                                                                [\"removeFormat\"],\r\n                                                                [\"table\", \"list\", \"lineHeight\"]\r\n                                                            ]\r\n                                                        }} />\r\n                                                    {/* <textarea\r\n                                                        value={ans}\r\n                                                        onChange={(e) => setAns(e.target.value)}\r\n                                                        placeholder=\"Write Answer Here.\"\r\n                                                        rows = \"5\"    \r\n                                                    >\r\n\r\n                                                    </textarea> */}\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"answer\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row mb-0\">\r\n                                                <div class=\"col-lg-10 ml-lg-auto\">\r\n                                                    <button type=\"reset\" style={{ borderColor: \"#26a69a\" }} class=\"btn btn-light\"\r\n                                                    >Reset<i class=\"icon-reset ml-2\"></i></button>\r\n                                                    <button type=\"submit\" class=\"btn bg-teal-400 ml-3\">Edit <i class=\"icon-paperplane ml-2\"></i></button>\r\n                                                    <div style={{ color: \"red\", fontSize: \"18px\", paddingTop: \"5px\" }}>{error}</div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditAnswer;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\AnswerList.js",["219","220","221","222","223","224","225","226","227","228"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/AnswerAction';\r\n\r\nimport { useAnswerDispatch, useAnswerState } from '../../../Context/AnswerContext';\r\n\r\nfunction AnswerList(props) {\r\n\r\n    var answerDispatch = useAnswerDispatch();\r\n    var { answers } = useAnswerState();\r\n    var [question, setQuestion] = useState(\"\");\r\n    var [id, setId] = useState(props.match.params.id);\r\n\r\n    useEffect(async () => {\r\n        await actions.getAllAnswerByQuestion(answerDispatch, id);\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (answers.length != 0) {\r\n            setQuestion(answers[0].questionId.question)\r\n        }\r\n    }, [answers])\r\n\r\n    const edit = (editId) => {\r\n        props.history.push(\"/admin/editanswer/\" + editId)\r\n    }\r\n\r\n    const remove = async (deleteId) => {\r\n        if (window.confirm('Are you sure to delete this Answer ?')) {\r\n            await actions.removeAnswer(answerDispatch, deleteId);\r\n            await actions.getAllAnswerByQuestion(answerDispatch, id);\r\n        }\r\n    }\r\n\r\n    var data = null;\r\n\r\n    data = answers.map(a => {\r\n        data = (\r\n            <tr>\r\n                <td dangerouslySetInnerHTML={{ __html: a.answer }}></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td class=\"text-center\">\r\n                    <div class=\"list-icons\">\r\n                        <div class=\"dropdown\">\r\n                            <a href=\"#\" class=\"list-icons-item\" data-toggle=\"dropdown\">\r\n                                <i class=\"icon-menu9\"></i>\r\n                            </a>\r\n\r\n                            <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                <a onClick={() => edit(a._id)} class=\"dropdown-item\"><i class=\"icon-pencil\"></i>Edit</a>\r\n                                <a onClick={() => remove(a._id)} class=\"dropdown-item\"><i class=\"icon-cross2\"></i>Delete</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n        )\r\n        return data;\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4> <span class=\"font-weight-semibold\">Answer List</span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i> Dashboard</a>\r\n                                    <a href=\"/admin/answerlist\" class=\"breadcrumb-item\">Answer List</a>\r\n\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n\r\n\r\n                                    <table class=\"table datatable-basic table-hover\">\r\n\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <td colSpan=\"6\" style={{textAlign:'center',fontWeight:'bold',color:'orange'}}><h3>Question : {question}</h3></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Answer</th>\r\n                                                <th colSpan=\"5\" class=\"text-center\">Actions</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            {data}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AnswerList;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\SearchAnswerList.js",["229","230","231","232","233","234","235","236","237","238"],"import React, { useEffect, useState } from 'react'\r\nimport copy from \"copy-to-clipboard\";  \r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/AnswerAction';\r\n\r\nimport { useAnswerDispatch, useAnswerState } from '../../../Context/AnswerContext';\r\n\r\nfunction SearchAnswerList(props) {\r\n\r\n    var answerDispatch = useAnswerDispatch();\r\n    var { answers } = useAnswerState();\r\n    var [question, setQuestion] = useState(\"\");\r\n    var [id, setId] = useState(props.match.params.id);\r\n\r\n    useEffect(async () => {\r\n        await actions.getAllAnswerByQuestion(answerDispatch, id);\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (answers.length != 0) {\r\n            setQuestion(answers[0].questionId.question)\r\n        }\r\n    }, [answers])\r\n\r\n    const edit = (editId) => {\r\n        props.history.push(\"/admin/editanswer/\" + editId)\r\n    }\r\n\r\n    const remove = async (deleteId) => {\r\n        if (window.confirm('Are you sure to delete this Answer ?')) {\r\n            await actions.removeAnswer(answerDispatch, deleteId);\r\n            await actions.getAllAnswerByQuestion(answerDispatch, id);\r\n        }\r\n    }\r\n\r\n    const copyCodeToClipboard = (answer) => {\r\n       copy(answer.answer);\r\n        document.getElementById(answer._id).style.color=\"green\";\r\n    }\r\n\r\n    var data = null;\r\n\r\n    data = answers.map(a => {\r\n        data = (\r\n            <tr>\r\n                <td dangerouslySetInnerHTML={{ __html: a.answer }}></td>\r\n                <td> </td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                    <div id=\"copy-div\">\r\n                        <i className=\"icon-copy4\" style={{color:\"black\"}} id={a._id} onClick={() => copyCodeToClipboard(a)}></i>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n\r\n        )\r\n        return data;\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4> <span class=\"font-weight-semibold\">Search Answer List</span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i> Dashboard</a>\r\n                                    <a href=\"#\" class=\"breadcrumb-item\">Search Answer List</a>\r\n\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n\r\n\r\n                                    <table class=\"table  table-hover\">\r\n\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <td colSpan=\"6\" style={{ textAlign: 'center', fontWeight: 'bold', color: '#26a69a' }}><h5>Question : {question}</h5></td>\r\n                                            </tr>\r\n\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            {data}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchAnswerList;","H:\\Nidhi-study\\LaNet Training\\QuestionSystem\\QuestionSystem\\ui\\src\\AdminUI\\Components\\Question\\AddAnswer.js",["239","240","241","242","243","244","245","246","247","248","249","250","251","252"],"import React, { useEffect, useState } from 'react'\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\n\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport * as actions from '../../../Actions/QuestionAction';\r\nimport * as aactions from '../../../Actions/AnswerAction';\r\n\r\nimport { useQuestionDispatch, useQuestionState } from '../../../Context/QuestionContext';\r\nimport { useAnswerDispatch, useAnswerState } from '../../../Context/AnswerContext';\r\n\r\nfunction AddAnswer(props) {\r\n\r\n    var { error, question } = useQuestionState();\r\n    var questionDispatch = useQuestionDispatch();\r\n\r\n    var { error, answer } = useAnswerState();\r\n    var answerDispatch = useAnswerDispatch();\r\n\r\n    var [que, setQue] = useState(\"\");\r\n    var [ans, setAns] = useState([]);\r\n    var [validation, setValidation] = useState(\"\");\r\n    var [id, setId] = useState(props.match.params.id);\r\n\r\n    useEffect(async () => {\r\n        await actions.getQuestionById(questionDispatch, id);\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (question != null) {\r\n            setQue(question.question)\r\n        }\r\n    }, [question])\r\n\r\n    const renderAnswer = (ans, handleChange, deleteAnswer) => {\r\n        return ans.map(detail => (\r\n            <div key={detail.key} >\r\n\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-form-label col-lg-2\">Answer <span class=\"text-danger\">*</span></label>\r\n\r\n                    <div class=\"col-lg-9\">\r\n                        <SunEditor\r\n                            onChange={(val) => handleChange(detail.key, val)}\r\n                            placeholder=\"Write Answer Here.\"\r\n                            lang=\"en\"\r\n                            height=\"100\"\r\n                            setOptions={{\r\n                                buttonList: [\r\n                                    [\"undo\", \"redo\"],\r\n                                    [\"font\", \"fontSize\", \"formatBlock\", \"paragraphStyle\", \"blockquote\", \"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\",\r\n                                        \"fontColor\", \"textStyle\"],\r\n                                    [\"removeFormat\"],\r\n                                    [\"table\", \"list\", \"lineHeight\"]\r\n                                ]\r\n                            }} />\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button class=\"btn bg-teal-400 ml-1\" onClick={() => deleteAnswer(detail.key)}>X</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    const addAnswer = () => {\r\n        let newAns = [...ans];\r\n        newAns.push({ key: ans.length, ans: \"\" });\r\n        setAns(newAns);\r\n    }\r\n\r\n    const deleteAnswer = (key) => {\r\n        let newAns = [...ans].filter(detail => detail.key !== key);\r\n        setAns(newAns);\r\n    }\r\n    const handleDataChange = (key, value) => {\r\n        let newAns = [...ans];\r\n        newAns[key].ans = value;\r\n        setAns(newAns);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (answer != null) {\r\n            props.history.push(\"/admin/questionlist\")\r\n        }\r\n    }, [error, answer])\r\n\r\n\r\n\r\n    const reset = () => {\r\n        setQue(\"\");\r\n        setValidation(\"\");\r\n        setAns(\"\");\r\n        error = \"\";\r\n        question = \"\";\r\n    }\r\n\r\n    const sumbitHandler=async(event)=>{\r\n        event.preventDefault();\r\n    }\r\n\r\n    const add = async (event) => { \r\n        if (await validate()) {\r\n            ans.forEach(async (final) => {\r\n                if (final.ans != \"\") {\r\n                    const answerdata = {\r\n                        questionId: question._id,\r\n                        answer: final.ans\r\n                    }\r\n                    await aactions.addAnswer(answerDispatch, answerdata)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n        let isValid = true;\r\n\r\n        if (ans.length == 0) {\r\n            isValid = false;\r\n            err[\"answer\"] = \"Please add atleast one answer.\";\r\n        }\r\n\r\n        setValidation(err)\r\n        return isValid;\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Header />\r\n            <div className=\"page-content\" style={{ height: \"100%\" }} >\r\n                <Sidebar />\r\n\r\n                <div class=\"content-wrapper\">\r\n\r\n                    <div class=\"page-header page-header-light\">\r\n                        <div class=\"page-header-content header-elements-md-inline\" style={{ height: \"55px\" }}>\r\n                            <div class=\"page-title d-flex\">\r\n                                <h4><span class=\"font-weight-semibold\">Add Answer </span></h4>\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\r\n                            <div class=\"d-flex\">\r\n                                <div class=\"breadcrumb\">\r\n                                    <a href=\"/admin\" class=\"breadcrumb-item\"><i class=\"icon-home2 mr-2\"></i>Dashboard</a>\r\n                                    <a href=\"#\" class=\"breadcrumb-item\">Add Answer</a>\r\n                                </div>\r\n\r\n                                <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n\r\n                        <div class=\"row\" style={{ marginBottom: \"50px\" }}>\r\n                            <div class=\"col-md-12\">\r\n\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header header-elements-inline\">\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"card-body\">\r\n                                        <form onSubmit={sumbitHandler} onReset={reset}>\r\n\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-form-label col-lg-2\">Question <span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"col-lg-9\">\r\n                                                    <input class=\"form-control\" type=\"text\" name=\"question\" placeholder=\"Enter Question\"\r\n                                                        value={que} readOnly />\r\n                                                    <div className=\"validation-invalid-label\">{validation[\"answer\"]}</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {renderAnswer(ans, handleDataChange, deleteAnswer)}\r\n                                            <div class=\"form-group row\">\r\n                                                <div class=\"card-header header-elements-inline\" style={{ marginLeft: \"140px\" }}>\r\n                                                    <h5 class=\"card-title\"></h5>\r\n                                                    <div class=\"header-elements\">\r\n                                                        <div class=\"list-icons\">\r\n                                                            <button onClick={addAnswer} class=\"btn bg-teal-400 ml-3\" >Add Answer + </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group row mb-0\">\r\n                                                <div class=\"col-lg-10 ml-lg-auto\">\r\n                                                    <button type=\"reset\" style={{ borderColor: \"#26a69a\" }} class=\"btn btn-light\"\r\n                                                    >Reset<i class=\"icon-reset ml-2\"></i></button>\r\n                                                    <button type=\"submit\" onClick={add} class=\"btn bg-teal-400 ml-3\">Add <i class=\"icon-paperplane ml-2\"></i></button>\r\n                                                    <div style={{ color: \"red\", fontSize: \"18px\", paddingTop: \"5px\" }}>{error}</div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddAnswer);\r\n",{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":14,"column":9,"nodeType":"259","messageId":"260","endLine":14,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":36,"column":15,"nodeType":"263","endLine":38,"endColumn":6},{"ruleId":"261","severity":1,"message":"264","line":38,"column":8,"nodeType":"265","endLine":38,"endColumn":10,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":50,"column":18,"nodeType":"269","messageId":"270","endLine":50,"endColumn":20},{"ruleId":"267","severity":1,"message":"268","line":50,"column":36,"nodeType":"269","messageId":"270","endLine":50,"endColumn":38},{"ruleId":"267","severity":1,"message":"268","line":61,"column":30,"nodeType":"269","messageId":"270","endLine":61,"endColumn":32},{"ruleId":"267","severity":1,"message":"268","line":81,"column":17,"nodeType":"269","messageId":"270","endLine":81,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":111,"column":21,"nodeType":"273","endLine":111,"endColumn":67},{"ruleId":"271","severity":1,"message":"272","line":130,"column":29,"nodeType":"273","endLine":130,"endColumn":99},{"ruleId":"257","severity":1,"message":"274","line":1,"column":10,"nodeType":"259","messageId":"260","endLine":1,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":46,"column":33,"nodeType":"273","endLine":46,"endColumn":65},{"ruleId":"271","severity":1,"message":"272","line":21,"column":6,"nodeType":"273","endLine":21,"endColumn":45},{"ruleId":"271","severity":1,"message":"272","line":30,"column":8,"nodeType":"273","endLine":30,"endColumn":102},{"ruleId":"271","severity":1,"message":"272","line":44,"column":8,"nodeType":"273","endLine":44,"endColumn":113},{"ruleId":"271","severity":1,"message":"277","line":28,"column":9,"nodeType":"273","endLine":28,"endColumn":34},{"ruleId":"271","severity":1,"message":"277","line":38,"column":9,"nodeType":"273","endLine":38,"endColumn":34},{"ruleId":"261","severity":1,"message":"262","line":14,"column":15,"nodeType":"263","endLine":16,"endColumn":6},{"ruleId":"261","severity":1,"message":"264","line":16,"column":8,"nodeType":"265","endLine":16,"endColumn":10,"suggestions":"278"},{"ruleId":"271","severity":1,"message":"272","line":42,"column":29,"nodeType":"273","endLine":42,"endColumn":88},{"ruleId":"271","severity":1,"message":"277","line":47,"column":33,"nodeType":"273","endLine":47,"endColumn":86},{"ruleId":"271","severity":1,"message":"277","line":48,"column":33,"nodeType":"273","endLine":48,"endColumn":88},{"ruleId":"271","severity":1,"message":"272","line":75,"column":33,"nodeType":"273","endLine":75,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":89,"column":33,"nodeType":"273","endLine":89,"endColumn":99},{"ruleId":"279","severity":1,"message":"280","line":103,"column":41,"nodeType":"273","endLine":103,"endColumn":64},{"ruleId":"261","severity":1,"message":"281","line":24,"column":8,"nodeType":"265","endLine":24,"endColumn":25,"suggestions":"282"},{"ruleId":"271","severity":1,"message":"272","line":75,"column":33,"nodeType":"273","endLine":75,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":88,"column":33,"nodeType":"273","endLine":88,"endColumn":99},{"ruleId":"257","severity":1,"message":"283","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"284","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":20},{"ruleId":"257","severity":1,"message":"285","line":17,"column":14,"nodeType":"259","messageId":"260","endLine":17,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":19,"column":15,"nodeType":"263","endLine":21,"endColumn":6},{"ruleId":"261","severity":1,"message":"286","line":21,"column":8,"nodeType":"265","endLine":21,"endColumn":10,"suggestions":"287"},{"ruleId":"261","severity":1,"message":"262","line":23,"column":15,"nodeType":"263","endLine":28,"endColumn":6},{"ruleId":"271","severity":1,"message":"272","line":81,"column":33,"nodeType":"273","endLine":81,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":91,"column":37,"nodeType":"273","endLine":91,"endColumn":73},{"ruleId":"271","severity":1,"message":"272","line":95,"column":33,"nodeType":"273","endLine":95,"endColumn":99},{"ruleId":"257","severity":1,"message":"288","line":2,"column":22,"nodeType":"259","messageId":"260","endLine":2,"endColumn":30},{"ruleId":"289","severity":1,"message":"290","line":24,"column":11,"nodeType":"259","messageId":"291","endLine":24,"endColumn":16},{"ruleId":"261","severity":1,"message":"262","line":81,"column":15,"nodeType":"263","endLine":85,"endColumn":6},{"ruleId":"261","severity":1,"message":"281","line":85,"column":8,"nodeType":"265","endLine":85,"endColumn":23,"suggestions":"292"},{"ruleId":"261","severity":1,"message":"262","line":87,"column":15,"nodeType":"263","endLine":97,"endColumn":6},{"ruleId":"261","severity":1,"message":"293","line":97,"column":8,"nodeType":"265","endLine":97,"endColumn":18,"suggestions":"294"},{"ruleId":"261","severity":1,"message":"262","line":99,"column":15,"nodeType":"263","endLine":101,"endColumn":6},{"ruleId":"261","severity":1,"message":"264","line":101,"column":8,"nodeType":"265","endLine":101,"endColumn":10,"suggestions":"295"},{"ruleId":"267","severity":1,"message":"268","line":146,"column":29,"nodeType":"269","messageId":"270","endLine":146,"endColumn":31},{"ruleId":"267","severity":1,"message":"268","line":156,"column":24,"nodeType":"269","messageId":"270","endLine":156,"endColumn":26},{"ruleId":"271","severity":1,"message":"272","line":178,"column":33,"nodeType":"273","endLine":178,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":191,"column":33,"nodeType":"273","endLine":191,"endColumn":99},{"ruleId":"279","severity":1,"message":"280","line":235,"column":53,"nodeType":"273","endLine":235,"endColumn":76},{"ruleId":"261","severity":1,"message":"262","line":14,"column":15,"nodeType":"263","endLine":16,"endColumn":6},{"ruleId":"261","severity":1,"message":"296","line":16,"column":8,"nodeType":"265","endLine":16,"endColumn":10,"suggestions":"297"},{"ruleId":"271","severity":1,"message":"272","line":55,"column":29,"nodeType":"273","endLine":55,"endColumn":88},{"ruleId":"271","severity":1,"message":"277","line":60,"column":33,"nodeType":"273","endLine":60,"endColumn":91},{"ruleId":"271","severity":1,"message":"277","line":61,"column":33,"nodeType":"273","endLine":61,"endColumn":93},{"ruleId":"271","severity":1,"message":"277","line":62,"column":33,"nodeType":"273","endLine":62,"endColumn":96},{"ruleId":"271","severity":1,"message":"277","line":63,"column":33,"nodeType":"273","endLine":63,"endColumn":97},{"ruleId":"271","severity":1,"message":"272","line":90,"column":33,"nodeType":"273","endLine":90,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":104,"column":33,"nodeType":"273","endLine":104,"endColumn":99},{"ruleId":"279","severity":1,"message":"280","line":118,"column":41,"nodeType":"273","endLine":118,"endColumn":64},{"ruleId":"257","severity":1,"message":"284","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":20},{"ruleId":"257","severity":1,"message":"285","line":24,"column":14,"nodeType":"259","messageId":"260","endLine":24,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":26,"column":15,"nodeType":"263","endLine":28,"endColumn":6},{"ruleId":"261","severity":1,"message":"298","line":28,"column":8,"nodeType":"265","endLine":28,"endColumn":10,"suggestions":"299"},{"ruleId":"261","severity":1,"message":"262","line":30,"column":15,"nodeType":"263","endLine":35,"endColumn":6},{"ruleId":"261","severity":1,"message":"262","line":37,"column":15,"nodeType":"263","endLine":39,"endColumn":6},{"ruleId":"261","severity":1,"message":"264","line":39,"column":8,"nodeType":"265","endLine":39,"endColumn":10,"suggestions":"300"},{"ruleId":"267","severity":1,"message":"268","line":80,"column":29,"nodeType":"269","messageId":"270","endLine":80,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":105,"column":33,"nodeType":"273","endLine":105,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":115,"column":37,"nodeType":"273","endLine":115,"endColumn":73},{"ruleId":"271","severity":1,"message":"272","line":119,"column":33,"nodeType":"273","endLine":119,"endColumn":99},{"ruleId":"257","severity":1,"message":"284","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":20},{"ruleId":"257","severity":1,"message":"301","line":11,"column":10,"nodeType":"259","messageId":"260","endLine":11,"endColumn":26},{"ruleId":"257","severity":1,"message":"285","line":20,"column":14,"nodeType":"259","messageId":"260","endLine":20,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":22,"column":15,"nodeType":"263","endLine":24,"endColumn":6},{"ruleId":"261","severity":1,"message":"302","line":24,"column":8,"nodeType":"265","endLine":24,"endColumn":10,"suggestions":"303"},{"ruleId":"261","severity":1,"message":"262","line":26,"column":15,"nodeType":"263","endLine":30,"endColumn":6},{"ruleId":"257","severity":1,"message":"304","line":32,"column":11,"nodeType":"259","messageId":"260","endLine":32,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":79,"column":33,"nodeType":"273","endLine":79,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":89,"column":37,"nodeType":"273","endLine":89,"endColumn":73},{"ruleId":"271","severity":1,"message":"272","line":93,"column":33,"nodeType":"273","endLine":93,"endColumn":99},{"ruleId":"257","severity":1,"message":"285","line":14,"column":14,"nodeType":"259","messageId":"260","endLine":14,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":16,"column":15,"nodeType":"263","endLine":18,"endColumn":6},{"ruleId":"261","severity":1,"message":"302","line":18,"column":8,"nodeType":"265","endLine":18,"endColumn":10,"suggestions":"305"},{"ruleId":"261","severity":1,"message":"262","line":20,"column":15,"nodeType":"263","endLine":24,"endColumn":6},{"ruleId":"267","severity":1,"message":"306","line":21,"column":28,"nodeType":"269","messageId":"270","endLine":21,"endColumn":30},{"ruleId":"271","severity":1,"message":"272","line":48,"column":29,"nodeType":"273","endLine":48,"endColumn":88},{"ruleId":"271","severity":1,"message":"277","line":53,"column":33,"nodeType":"273","endLine":53,"endColumn":86},{"ruleId":"271","severity":1,"message":"277","line":54,"column":33,"nodeType":"273","endLine":54,"endColumn":88},{"ruleId":"271","severity":1,"message":"272","line":80,"column":33,"nodeType":"273","endLine":80,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":94,"column":33,"nodeType":"273","endLine":94,"endColumn":99},{"ruleId":"257","severity":1,"message":"285","line":15,"column":14,"nodeType":"259","messageId":"260","endLine":15,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":17,"column":15,"nodeType":"263","endLine":19,"endColumn":6},{"ruleId":"261","severity":1,"message":"302","line":19,"column":8,"nodeType":"265","endLine":19,"endColumn":10,"suggestions":"307"},{"ruleId":"261","severity":1,"message":"262","line":21,"column":15,"nodeType":"263","endLine":25,"endColumn":6},{"ruleId":"267","severity":1,"message":"306","line":22,"column":28,"nodeType":"269","messageId":"270","endLine":22,"endColumn":30},{"ruleId":"257","severity":1,"message":"308","line":27,"column":11,"nodeType":"259","messageId":"260","endLine":27,"endColumn":15},{"ruleId":"257","severity":1,"message":"309","line":31,"column":11,"nodeType":"259","messageId":"260","endLine":31,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":77,"column":33,"nodeType":"273","endLine":77,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":87,"column":37,"nodeType":"273","endLine":87,"endColumn":73},{"ruleId":"271","severity":1,"message":"272","line":91,"column":33,"nodeType":"273","endLine":91,"endColumn":99},{"ruleId":"257","severity":1,"message":"288","line":2,"column":22,"nodeType":"259","messageId":"260","endLine":2,"endColumn":30},{"ruleId":"289","severity":1,"message":"290","line":19,"column":11,"nodeType":"259","messageId":"291","endLine":19,"endColumn":16},{"ruleId":"257","severity":1,"message":"285","line":25,"column":14,"nodeType":"259","messageId":"260","endLine":25,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":27,"column":15,"nodeType":"263","endLine":29,"endColumn":6},{"ruleId":"261","severity":1,"message":"298","line":29,"column":8,"nodeType":"265","endLine":29,"endColumn":10,"suggestions":"310"},{"ruleId":"261","severity":1,"message":"262","line":31,"column":15,"nodeType":"263","endLine":35,"endColumn":6},{"ruleId":"261","severity":1,"message":"262","line":86,"column":15,"nodeType":"263","endLine":90,"endColumn":6},{"ruleId":"261","severity":1,"message":"281","line":90,"column":8,"nodeType":"265","endLine":90,"endColumn":23,"suggestions":"311"},{"ruleId":"267","severity":1,"message":"306","line":109,"column":31,"nodeType":"269","messageId":"270","endLine":109,"endColumn":33},{"ruleId":"267","severity":1,"message":"268","line":124,"column":24,"nodeType":"269","messageId":"270","endLine":124,"endColumn":26},{"ruleId":"271","severity":1,"message":"272","line":146,"column":33,"nodeType":"273","endLine":146,"endColumn":99},{"ruleId":"271","severity":1,"message":"272","line":156,"column":37,"nodeType":"273","endLine":156,"endColumn":73},{"ruleId":"271","severity":1,"message":"272","line":159,"column":33,"nodeType":"273","endLine":159,"endColumn":99},{"ruleId":"279","severity":1,"message":"280","line":191,"column":53,"nodeType":"273","endLine":191,"endColumn":76},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"no-unused-vars","'style' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'languageDispatch'. Either include it or remove the dependency array.","ArrayExpression",["314"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["315"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["316"],"'Component' is defined but never used.","'withRouter' is defined but never used.","'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'languageDispatch'. Either include them or remove the dependency array.",["317"],"'Redirect' is defined but never used.","no-redeclare","'error' is already defined.","redeclared",["318"],"React Hook useEffect has missing dependencies: 'ans' and 'answerDispatch'. Either include them or remove the dependency array.",["319"],["320"],"React Hook useEffect has a missing dependency: 'questionDispatch'. Either include it or remove the dependency array.",["321"],"React Hook useEffect has missing dependencies: 'id' and 'questionDispatch'. Either include them or remove the dependency array.",["322"],["323"],"'QuestionProvider' is defined but never used.","React Hook useEffect has missing dependencies: 'answerDispatch' and 'id'. Either include them or remove the dependency array.",["324"],"'handleChange' is assigned a value but never used.",["325"],"Expected '!==' and instead saw '!='.",["326"],"'edit' is assigned a value but never used.","'remove' is assigned a value but never used.",["327"],["328"],"no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"329","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"329","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"329","fix":"345"},{"desc":"346","fix":"347"},{"desc":"346","fix":"348"},{"desc":"346","fix":"349"},{"desc":"343","fix":"350"},{"desc":"336","fix":"351"},"Update the dependencies array to be: [languageDispatch]",{"range":"352","text":"353"},{"range":"354","text":"353"},"Update the dependencies array to be: [error, language, props.history]",{"range":"355","text":"356"},"Update the dependencies array to be: [id, languageDispatch]",{"range":"357","text":"358"},"Update the dependencies array to be: [error, answer, props.history]",{"range":"359","text":"360"},"Update the dependencies array to be: [ans, answerDispatch, question]",{"range":"361","text":"362"},{"range":"363","text":"353"},"Update the dependencies array to be: [questionDispatch]",{"range":"364","text":"365"},"Update the dependencies array to be: [id, questionDispatch]",{"range":"366","text":"367"},{"range":"368","text":"353"},"Update the dependencies array to be: [answerDispatch, id]",{"range":"369","text":"370"},{"range":"371","text":"370"},{"range":"372","text":"370"},{"range":"373","text":"367"},{"range":"374","text":"360"},[1190,1192],"[languageDispatch]",[508,510],[756,773],"[error, language, props.history]",[789,791],"[id, languageDispatch]",[3267,3282],"[error, answer, props.history]",[3641,3651],"[ans, answerDispatch, question]",[3750,3752],[508,510],"[questionDispatch]",[1024,1026],"[id, questionDispatch]",[1305,1307],[861,863],"[answerDispatch, id]",[615,617],[662,664],[1104,1106],[3260,3275]]